[ {
  "number" : 1,
  "answers" : [ {
    "key" : "A",
    "text" : " java.lang.RuntimeException: Problem\n"
  }, {
    "key" : "B",
    "text" : " run.\njava.lang.RuntimeException: Problem\n"
  }, {
    "key" : "C",
    "text" : " End of method.\njava.lang.RuntimeException: Problem\n"
  }, {
    "key" : "D",
    "text" : " End of method.\nrun.\njava.lang.RuntimeException: Problem\n"
  }, {
    "key" : "E",
    "text" : " run.\njava.lang.RuntimeException: Problem\nEnd of method.\n"
  } ],
  "sucessAnswers" : [ "D", "E" ],
  "text" : "Given:\n1. public class Threads2 implements Runnable {\n2.\n3. public void run() {\n4. System.out.println(\"run.\");\n5. throw new RuntimeException(\"Problem\");\n6. }\n7. public static void main(String[] args) {\n8. Thread t = new Thread(new Threads2());\n9. t.start();\n10. System.out.println(\"End of method.\");\n11. }\n12. }\nWhich two can be results? (Choose two.)\n"
}, {
  "number" : 2,
  "answers" : [ {
    "key" : "A",
    "text" : " It is possible for more than two threads to deadlock at once.\n"
  }, {
    "key" : "B",
    "text" : " The JVM implementation guarantees that multiple threads cannot enter into a\ndeadlocked state.\n"
  }, {
    "key" : "C",
    "text" : " Deadlocked threads release once their sleep() method's sleep duration has expired.\n"
  }, {
    "key" : "D",
    "text" : " Deadlocking can occur only when the wait(), notify(), and notifyAll() methods are\nused incorrectly.\n"
  }, {
    "key" : "E",
    "text" : " It is possible for a single-threaded application to deadlock if synchronized blocks are\nused incorrectly.\n"
  }, {
    "key" : "F",
    "text" : " If a piece of code is capable of deadlocking, you cannot eliminate the possibility of\ndeadlocking by inserting\ninvocations of Thread.yield().\n"
  } ],
  "sucessAnswers" : [ "A", "F" ],
  "text" : "Which two statements are true? (Choose two.)\n"
}, {
  "number" : 3,
  "answers" : [ {
    "key" : "A",
    "text" : " This code can throw an InterruptedException.\n"
  }, {
    "key" : "B",
    "text" : " This code can throw an IllegalMonitorStateException.\n"
  }, {
    "key" : "C",
    "text" : " This code can throw a TimeoutException after ten minutes.\n"
  }, {
    "key" : "D",
    "text" : " Reversing the order of obj.wait() and obj.notify() might cause this method to complete\nnormally.\n"
  }, {
    "key" : "E",
    "text" : " A call to notify() or notifyAll() from another thread might cause this method to\ncomplete normally.\n"
  }, {
    "key" : "F",
    "text" : " This code does NOT compile unless \"obj.wait()\" is replaced with \"((Thread)\nobj).wait()\".\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n7. void waitForSignal() {\n8. Object obj = new Object();\n9. synchronized (Thread.currentThread()) {\n10. obj.wait();\n11. obj.notify();\n12. }\n13. }\nWhich statement is true?\n"
}, {
  "number" : 4,
  "answers" : [ {
    "key" : "A",
    "text" : " 4\n"
  }, {
    "key" : "B",
    "text" : " 5\n"
  }, {
    "key" : "C",
    "text" : " 8\n"
  }, {
    "key" : "D",
    "text" : " 9\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "F",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "G",
    "text" : " It is impossible to determine for certain.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Click the Exhibit button.\nWhat is the output if the main() method is run?\n"
}, {
  "number" : 5,
  "answers" : [ {
    "key" : "A",
    "text" : " The output could be 5-1 6-1 6-2 5-2\n"
  }, {
    "key" : "B",
    "text" : " The output could be 6-1 6-2 5-1 5-2\n"
  }, {
    "key" : "C",
    "text" : " The output could be 6-1 5-2 6-2 5-1\n"
  }, {
    "key" : "D",
    "text" : " The output could be 6-1 6-2 5-1 7-1\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n11. class PingPong2 {\n12. synchronized void hit(long n) {\n13. for(int i = 1; i < 3; i++)\n14. System.out.print(n + \"-\" + i + \" \");\n15. }\n16. }\n17. public class Tester implements Runnable {\n18. static PingPong2 pp2 = new PingPong2();\n19. public static void main(String[] args) {\n20. new Thread(new Tester()).start();\n21. new Thread(new Tester()).start();\n22. }\n23. public void run() { pp2.hit(Thread.currentThread().getId()); }\n24. }\nWhich statement is true?\n"
}, {
  "number" : 6,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "C",
    "text" : " The code executes normally and prints \"foo\".\n"
  }, {
    "key" : "D",
    "text" : " The code executes normally, but nothing is printed.\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n1. public class Threads4 {\n2. public static void main (String[] args) {\n3. new Threads4().go();\n4. }\n5. public void go() {\n6. Runnable r = new Runnable() {\n7. public void run() {\n8. System.out.print(\"foo\");\n9. }\n10. };\n11. Thread t = new Thread(r);\n12. t.start();\n13. t.start();\n14. }\n15. }\nWhat is the result?\n"
}, {
  "number" : 7,
  "answers" : [ {
    "key" : "A",
    "text" : " public class Circle implements Shape {\nprivate int radius;\n}\n"
  }, {
    "key" : "B",
    "text" : " public abstract class Circle extends Shape {\nprivate int radius;\n}\n"
  }, {
    "key" : "C",
    "text" : " public class Circle extends Shape {\nprivate int radius;\npublic void draw();\n}\n"
  }, {
    "key" : "D",
    "text" : " public abstract class Circle implements Shape {\nprivate int radius;\npublic void draw();\n}\n"
  }, {
    "key" : "E",
    "text" : " public class Circle extends Shape {\nprivate int radius;\npublic void draw() {/* code here */}\n"
  }, {
    "key" : "F",
    "text" : " public abstract class Circle implements Shape {\nprivate int radius;\npublic void draw() { /* code here */ }\n"
  } ],
  "sucessAnswers" : [ "B", "E" ],
  "text" : "Given:\n11. public abstract class Shape {\n12. private int x;\n13. private int y;\n14. public abstract void draw();\n15. public void setAnchor(int x, int y) {\n16. this.x = x;\n17. this.y = y;\n18. }\n19. }\nWhich two classes use the Shape class correctly? (Choose two.)\n"
}, {
  "number" : 8,
  "answers" : [ {
    "key" : "A",
    "text" : " hi hi\n"
  }, {
    "key" : "B",
    "text" : " hi world\n"
  }, {
    "key" : "C",
    "text" : " world world\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "E",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n11. public class Barn {\n12. public static void main(String[] args) {\n13. new Barn().go(\"hi\", 1);\n14. new Barn().go(\"hi\", \"world\", 2);\n15. }\n16. public void go(String... y, int x) {\n17. System.out.print(y[y.length - 1] + \" \");\n18. }\n19. }\nWhat is the result?\n"
}, {
  "number" : 9,
  "answers" : [ {
    "key" : "A",
    "text" : " Direction d = NORTH;\n"
  }, {
    "key" : "B",
    "text" : " Nav.Direction d = NORTH;\n"
  }, {
    "key" : "C",
    "text" : " Direction d = Direction.NORTH;\n"
  }, {
    "key" : "D",
    "text" : " Nav.Direction d = Nav.Direction.NORTH;\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n10. class Nav{\n11. public enum Direction { NORTH, SOUTH, EAST, WEST }\n12. }\n13. public class Sprite{\n14. // insert code here\n15. }\nWhich code, inserted at line 14, allows the Sprite class to compile?\n"
}, {
  "number" : 10,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation will succeed for all classes and interfaces.\n"
  }, {
    "key" : "B",
    "text" : " Compilation of class C will fail because of an error in line 2.\n"
  }, {
    "key" : "C",
    "text" : " Compilation of class C will fail because of an error in line 6.\n"
  }, {
    "key" : "D",
    "text" : " Compilation of class AImpl will fail because of an error in line 2.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Click the Exhibit button.\nWhich statement is true about the classes and interfaces in the exhibit?\n"
}, {
  "number" : 11,
  "answers" : [ {
    "key" : "A",
    "text" : " 4321\n"
  }, {
    "key" : "B",
    "text" : " 0000\n"
  }, {
    "key" : "C",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails because of an error in line 18.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Click the Exhibit button.\nWhat is the result?\n"
}, {
  "number" : 12,
  "answers" : [ {
    "key" : "A",
    "text" : " MyColor skyColor = BLUE;\n"
  }, {
    "key" : "B",
    "text" : " MyColor treeColor = MyColor.GREEN;\n"
  }, {
    "key" : "C",
    "text" : " if(RED.getRGB() < BLUE.getRGB()) { }\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails due to other error(s) in the code.\n"
  }, {
    "key" : "E",
    "text" : " MyColor purple = new MyColor(0xff00ff);\n"
  }, {
    "key" : "F",
    "text" : " MyColor purple = MyColor.BLUE + MyColor.RED;\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n11. public class Rainbow {\n12. public enum MyColor {\n13. RED(0xff0000), GREEN(0x00ff00), BLUE(0x0000ff);\n14. private final int rgb;\n15. MyColor(int rgb) { this.rgb = rgb; }\n16. public int getRGB() { return rgb; }\n17. };\n18. public static void main(String[] args) {\n19. // insert code here\n20. }\n21. }\nWhich code fragment, inserted at line 19, allows the Rainbow class to compile?\n"
}, {
  "number" : 13,
  "answers" : [ {
    "key" : "A",
    "text" : " 0\n"
  }, {
    "key" : "B",
    "text" : " 1\n"
  }, {
    "key" : "C",
    "text" : " 2\n"
  }, {
    "key" : "D",
    "text" : " 3\n"
  }, {
    "key" : "E",
    "text" : " 4\n"
  }, {
    "key" : "F",
    "text" : " 5\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n11. class Mud {\n12. // insert code here\n13. System.out.println(\"hi\");\n14. }\n15. }\nAnd the following five fragments:\npublic static void main(String...a) {\npublic static void main(String.* a) {\npublic static void main(String... a) {\npublic static void main(String[]... a) {\npublic static void main(String...[] a) {\nHow many of the code fragments, inserted independently at line 12, compile?\n"
}, {
  "number" : 14,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " atom granite\n"
  }, {
    "key" : "C",
    "text" : " granite granite\n"
  }, {
    "key" : "D",
    "text" : " atom granite granite\n"
  }, {
    "key" : "E",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "F",
    "text" : " atom granite atom granite\n"
  } ],
  "sucessAnswers" : [ "F" ],
  "text" : "Given:\n5. class Atom {\n6. Atom() { System.out.print(\"atom \"); }\n7. }\n8. class Rock extends Atom {\n9. Rock(String type) { System.out.print(type); }\n10. }\n11. public class Mountain extends Rock {\n12. Mountain() {\n13. super(\"granite \");\n14. new Rock(\"granite \");\n15. }\n16. public static void main(String[] a) { new Mountain(); }\n17. }\nWhat is the result?\n"
}, {
  "number" : 15,
  "answers" : [ {
    "key" : "A",
    "text" : " test\n"
  }, {
    "key" : "B",
    "text" : " null\n"
  }, {
    "key" : "C",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails because of an error in line 1.\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails because of an error in line 4.\n"
  }, {
    "key" : "F",
    "text" : " Compilation fails because of an error in line 5.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n1. interface TestA { String toString(); }\n2. public class Test {\n3. public static void main(String[] args) {\n4. System.out.println(new TestA() {\n5. public String toString() { return \"test\"; }\n6. });\n7. }\n8. }\nWhat is the result?\n"
}, {
  "number" : 16,
  "answers" : [ {
    "key" : "A",
    "text" : " 0.0\n"
  }, {
    "key" : "B",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "C",
    "text" : " A ParseException is thrown by the parse method at runtime.\n"
  }, {
    "key" : "D",
    "text" : " A NumberFormatException is thrown by the parse method at runtime.\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n11. public static void parse(String str) {\n12. try {\n13. float f = Float.parseFloat(str);\n14. } catch (NumberFormatException nfe) {\n15. f = 0;\n16. } finally {\n17. System.out.println(f);\n18. }\n19. }\n20. public static void main(String[] args) {\n21. parse(\"invalid\");\n22. }\nWhat is the result?\n"
}, {
  "number" : 17,
  "answers" : [ {
    "key" : "A",
    "text" : " public int blipvert(int x) { return 0; }\n"
  }, {
    "key" : "B",
    "text" : " private int blipvert(int x) { return 0; }\n"
  }, {
    "key" : "C",
    "text" : " private int blipvert(long x) { return 0; }\n"
  }, {
    "key" : "D",
    "text" : " protected long blipvert(int x) { return 0; }\n"
  }, {
    "key" : "E",
    "text" : " protected int blipvert(long x) { return 0; }\n"
  }, {
    "key" : "F",
    "text" : " protected long blipvert(long x) { return 0; }\n"
  }, {
    "key" : "G",
    "text" : " protected long blipvert(int x, int y) { return 0; }\n"
  } ],
  "sucessAnswers" : [ "A", "C", "E", "F", "G" ],
  "text" : "Given:\n1. public class Blip {\n2. protected int blipvert(int x) { return 0; }\n3. }\n4. class Vert extends Blip {\n5. // insert code here\n6. }\nWhich five methods, inserted independently at line 5, will compile? (Choose five.)\n"
}, {
  "number" : 18,
  "answers" : [ {
    "key" : "A",
    "text" : " Change line 2 to:\npublic int a;\n"
  }, {
    "key" : "B",
    "text" : " Change line 2 to:\nprotected int a;\n"
  }, {
    "key" : "C",
    "text" : " Change line 13 to:\npublic Sub() { this(5); }\n"
  }, {
    "key" : "D",
    "text" : " Change line 13 to:\npublic Sub() { super(5); }\n"
  }, {
    "key" : "E",
    "text" : " Change line 13 to:\npublic Sub() { super(a); }\n"
  } ],
  "sucessAnswers" : [ "C", "D" ],
  "text" : "Given:\n1. class Super {\n2. private int a;\n3. protected Super(int a) { this.a = a; }\n4. }\n...\n11. class Sub extends Super {\n12. public Sub(int a) { super(a); }\n13. public Sub() { this.a = 5; }\n14. }\nWhich two, independently, will allow Sub to compile? (Choose two.)\n"
}, {
  "number" : 19,
  "answers" : [ {
    "key" : "A",
    "text" : " class Man extends Dog { }\n"
  }, {
    "key" : "B",
    "text" : " class Man implements Dog { }\n"
  }, {
    "key" : "C",
    "text" : " class Man { private BestFriend dog; }\n"
  }, {
    "key" : "D",
    "text" : " class Man { private Dog bestFriend; }\n"
  }, {
    "key" : "E",
    "text" : " class Man { private Dog<bestFriend>; }\n"
  }, {
    "key" : "F",
    "text" : " class Man { private BestFriend<dog>; }\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Which Man class properly represents the relationship \"Man has a best friend who is a\nDog\"?\n"
}, {
  "number" : 20,
  "answers" : [ {
    "key" : "A",
    "text" : " any class\n"
  }, {
    "key" : "B",
    "text" : " only the Target class\n"
  }, {
    "key" : "C",
    "text" : " any class in the test package\n"
  }, {
    "key" : "D",
    "text" : " any class that extends Target\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given:\n1. package test;\n2.\n3. class Target {\n4. public String name = \"hello\";\n5. }\nWhat can directly access and change the value of the variable name?\n"
}, {
  "number" : 21,
  "answers" : [ {
    "key" : "A",
    "text" : " 0, 0, 0\n"
  }, {
    "key" : "B",
    "text" : " 150, 60, 0\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "D",
    "text" : " 150, 150, 150\n"
  }, {
    "key" : "E",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n11. abstract class Vehicle { public int speed() { return 0; }\n12. class Car extends Vehicle { public int speed() { return 60; }\n13. class RaceCar extends Car { public int speed() { return 150; }\n...\n21. RaceCar racer = new RaceCar();\n22. Car car = new RaceCar();\n23. Vehicle vehicle = new RaceCar();\n24. System.out.println(racer.speed() + \", \" + car.speed()\n25. + \", \" + vehicle.speed());\nWhat is the result?\n"
}, {
  "number" : 22,
  "answers" : [ {
    "key" : "A",
    "text" : " If line 10 is removed, the compilation succeeds.\n"
  }, {
    "key" : "B",
    "text" : " If line 11 is removed, the compilation succeeds.\n"
  }, {
    "key" : "C",
    "text" : " If line 12 is removed, the compilation succeeds.\n"
  }, {
    "key" : "D",
    "text" : " If line 13 is removed, the compilation succeeds.\n"
  }, {
    "key" : "E",
    "text" : " More than one line must be removed for compilation to succeed.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given:\n5. class Building { }\n6. public class Barn extends Building {\n7. public static void main(String[] args) {\n8. Building build1 = new Building();\n9. Barn barn1 = new Barn();\n10. Barn barn2 = (Barn) build1;\n11. Object obj1 = (Object) build1;\n12. String str1 = (String) build1;\n13. Building build2 = (Building) barn1;\n14. }\n15. }\nWhich is true?\n"
}, {
  "number" : 23,
  "answers" : [ {
    "key" : "A",
    "text" : " Looser coupling\n"
  }, {
    "key" : "B",
    "text" : " Tighter coupling\n"
  }, {
    "key" : "C",
    "text" : " Lower cohesion\n"
  }, {
    "key" : "D",
    "text" : " Higher cohesion\n"
  }, {
    "key" : "E",
    "text" : " Weaker encapsulation\n"
  }, {
    "key" : "F",
    "text" : " Stronger encapsulation\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "A team of programmers is reviewing a proposed API for a new utility class. After some\ndiscussion, they realize that they can reduce the number of methods in the API without\nlosing any functionality. If they implement the new design, which two OO principles will\nthey be promoting?\n"
}, {
  "number" : 24,
  "answers" : [ {
    "key" : "A",
    "text" : " Canada\n"
  }, {
    "key" : "B",
    "text" : " null Canada\n"
  }, {
    "key" : "C",
    "text" : " Canada null\n"
  }, {
    "key" : "D",
    "text" : " Canada Canada\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails due to an error on line 26.\n"
  }, {
    "key" : "F",
    "text" : " Compilation fails due to an error on line 29.\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\n21. class Money {\n22. private String country = \"Canada\";\n23. public String getC() { return country; }\n24. }\n25. class Yen extends Money {\n26. public String getC() { return super.country; }\n27. }\n28. public class Euro extends Money {\n29. public String getC(int x) { return super.getC(); }\n30. public static void main(String[] args) {\n31. System.out.print(new Yen().getC() + \" \" + new Euro().getC());\n32. }\n33. }\nWhat is the result?\n"
}, {
  "number" : 25,
  "answers" : [ {
    "key" : "A",
    "text" : " restore 400\n"
  }, {
    "key" : "B",
    "text" : " restore 403\n"
  }, {
    "key" : "C",
    "text" : " restore 453\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "E",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Assuming that the serializeBanana() and the deserializeBanana() methods will correctly\nuse Java serialization and given:\n13. import java.io.*;\n14. class Food implements Serializable {int good = 3;}\n15. class Fruit extends Food {int juice = 5;}\n16. public class Banana extends Fruit {\n17. int yellow = 4;\n18. public static void main(String [] args) {\n19. Banana b = new Banana(); Banana b2 = new Banana();\n20. b.serializeBanana(b); // assume correct serialization\n21. b2 = b.deserializeBanana(); // assume correct\n22. System.out.println(\"restore \"+b2.yellow+ b2.juice+b2.good);\n24. }\n25. // more Banana methods go here\n50. }\nWhat is the result?\n"
}, {
  "number" : 26,
  "answers" : [ {
    "key" : "A",
    "text" : " 18. d = df.parse(ds);\n"
  }, {
    "key" : "B",
    "text" : " 18. d = df.getDate(ds);\n"
  }, {
    "key" : "C",
    "text" : " 18. try {\n19. d = df.parse(ds);\n20. } catch(ParseException e) { };\n"
  }, {
    "key" : "D",
    "text" : " 18. try {\n19. d = df.getDate(ds);\n20. } catch(ParseException e) { };\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given a valid DateFormat object named df, and\n16. Date d = new Date(0L);\n17. String ds = \"December 15, 2004\";\n18. // insert code here\nWhat updates d's value with the date represented by ds?\n"
}, {
  "number" : 27,
  "answers" : [ {
    "key" : "A",
    "text" : " b = nf.parse( input );\n"
  }, {
    "key" : "B",
    "text" : " b = nf.format( input );\n"
  }, {
    "key" : "C",
    "text" : " b = nf.equals( input );\n"
  }, {
    "key" : "D",
    "text" : " b = nf.parseObject( input );\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n11. double input = 314159.26;\n12. NumberFormat nf = NumberFormat.getInstance(Locale.ITALIAN);\n13. String b;\n14. //insert code here\nWhich code, inserted at line 14, sets the value of b to 314.159,26?\n"
}, {
  "number" : 28,
  "answers" : [ {
    "key" : "A",
    "text" : " 42\n"
  }, {
    "key" : "B",
    "text" : " 420\n"
  }, {
    "key" : "C",
    "text" : " 462\n"
  }, {
    "key" : "D",
    "text" : " 42042\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "F",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n1. public class TestString1 {\n2. public static void main(String[] args) {\n3. String str = \"420\";\n4. str += 42;\n5. System.out.print(str);\n6. }\n7. }\nWhat is the output?\n"
}, {
  "number" : 29,
  "answers" : [ {
    "key" : "A",
    "text" : " Closing an open stream.\n"
  }, {
    "key" : "B",
    "text" : " Flushing an open stream.\n"
  }, {
    "key" : "C",
    "text" : " Writing to an open stream.\n"
  }, {
    "key" : "D",
    "text" : " Writing a line separator to an open stream.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Which capability exists only in java.io.FileWriter?\n"
}, {
  "number" : 30,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " The file system has a new empty directory named dir.\n"
  }, {
    "key" : "C",
    "text" : " The file system has a new empty directory named newDir.\n"
  }, {
    "key" : "D",
    "text" : " The file system has a directory named dir, containing a file f1.txt.\n"
  }, {
    "key" : "E",
    "text" : " The file system has a directory named newDir, containing a file f1.txt.\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given that the current directory is empty, and that the user has read and write\npermissions, and the following:\n11. import java.io.*;\n12. public class DOS {\n13. public static void main(String[] args) {\n14. File dir = new File(\"dir\");\n15. dir.mkdir();\n16. File f1 = new File(dir, \"f1.txt\");\n17. try {\n18. f1.createNewFile();\n19. } catch (IOException e) { ; }\n20. File newDir = new File(\"newDir\");\n21. dir.renameTo(newDir);\n22. }\n23. }\nWhich statement is true?\n"
}, {
  "number" : 31,
  "answers" : [ {
    "key" : "A",
    "text" : " sb1.append(\"abc\"); s1.append(\"abc\");\n"
  }, {
    "key" : "B",
    "text" : " sb1.append(\"abc\"); s1.concat(\"abc\");\n"
  }, {
    "key" : "C",
    "text" : " sb1.concat(\"abc\"); s1.append(\"abc\");\n"
  }, {
    "key" : "D",
    "text" : " sb1.concat(\"abc\"); s1.concat(\"abc\");\n"
  }, {
    "key" : "E",
    "text" : " sb1.append(\"abc\"); s1 = s1.concat(\"abc\");\n"
  }, {
    "key" : "F",
    "text" : " sb1.concat(\"abc\"); s1 = s1.concat(\"abc\");\n"
  }, {
    "key" : "G",
    "text" : " sb1.append(\"abc\"); s1 = s1 + s1.concat(\"abc\");\n"
  }, {
    "key" : "H",
    "text" : " sb1.concat(\"abc\"); s1 = s1 + s1.concat(\"abc\");\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\n22. StringBuilder sb1 = new StringBuilder(\"123\");\n23. String s1 = \"123\";\n24. // insert code here\n25. System.out.println(sb1 + \" \" + s1);\nWhich code fragment, inserted at line 24, outputs \"123abc 123abc\"?\n"
}, {
  "number" : 32,
  "answers" : [ {
    "key" : "A",
    "text" : " s.defaultReadObject();\n"
  }, {
    "key" : "B",
    "text" : " this = s.defaultReadObject();\n"
  }, {
    "key" : "C",
    "text" : " y = s.readInt(); x = s.readInt();\n"
  }, {
    "key" : "D",
    "text" : " x = s.readInt(); y = s.readInt();\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Click the Exhibit button.\nWhich code, inserted at line 14, will allow this class to correctly serialize and deserialize?\n"
}, {
  "number" : 33,
  "answers" : [ {
    "key" : "A",
    "text" : " System.out.printf(\"|%7d| \\n\", d);\n"
  }, {
    "key" : "B",
    "text" : " System.out.printf(\"|%7f| \\n\", d);\n"
  }, {
    "key" : "C",
    "text" : " System.out.printf(\"|%3.7d| \\n\", d);\n"
  }, {
    "key" : "D",
    "text" : " System.out.printf(\"|%3.7f| \\n\", d);\n"
  }, {
    "key" : "E",
    "text" : " System.out.printf(\"|%7.3d| \\n\", d);\n"
  }, {
    "key" : "F",
    "text" : " System.out.printf(\"|%7.3f| \\n\", d);\n"
  } ],
  "sucessAnswers" : [ "F" ],
  "text" : "Given:\n1. public class LineUp {\n2. public static void main(String[] args) {\n3. double d = 12.345;\n4. // insert code here\n5. }\n6. }\nWhich code fragment, inserted at line 4, produces the output | 12.345|?\n"
}, {
  "number" : 34,
  "answers" : [ {
    "key" : "A",
    "text" : " 2\n"
  }, {
    "key" : "B",
    "text" : " 3\n"
  }, {
    "key" : "C",
    "text" : " 1 2\n"
  }, {
    "key" : "D",
    "text" : " 2 3\n"
  }, {
    "key" : "E",
    "text" : " 1 2 3\n"
  }, {
    "key" : "F",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "G",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n11. public class Test {\n12. public static void main(String [] args) {\n13. int x = 5;\n14. boolean b1 = true;\n15. boolean b2 = false;\n16.\n17. if ((x == 4) && !b2 )\n18. System.out.print(\"1 \");\n19. System.out.print(\"2 \");\n20. if ((b2 = true) && b1 )\n21. System.out.print(\"3 \");\n22. }\n23. }\nWhat is the result?\n"
}, {
  "number" : 35,
  "answers" : [ {
    "key" : "A",
    "text" : " Alpha a = x;\n"
  }, {
    "key" : "B",
    "text" : " Foo f = (Delta)x;\n"
  }, {
    "key" : "C",
    "text" : " Foo f = (Alpha)x;\n"
  }, {
    "key" : "D",
    "text" : " Beta b = (Beta)(Alpha)x;\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n10. interface Foo {}\n11. class Alpha implements Foo {}\n12. class Beta extends Alpha {}\n13. class Delta extends Beta {\n14. public static void main( String[] args ) {\n15. Beta x = new Beta();\n16. // insert code here\n17. }\n18. }\nWhich code, inserted at line 16, will cause a java.lang.ClassCastException?\n"
}, {
  "number" : 36,
  "answers" : [ {
    "key" : "A",
    "text" : " 00\n"
  }, {
    "key" : "B",
    "text" : " 0001\n"
  }, {
    "key" : "C",
    "text" : " 000120\n"
  }, {
    "key" : "D",
    "text" : " 00012021\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "F",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given:\n22. public void go() {\n23. String o = \"\";\n24. z:\n25. for(int x = 0; x < 3; x++) {\n26. for(int y = 0; y < 2; y++) {\n27. if(x==1) break;\n28. if(x==2 && y==1) break z;\n29. o = o + x + y;\n30. }\n31. }\n32. System.out.println(o);\n33. }\nWhat is the result when the go() method is invoked?\n"
}, {
  "number" : 37,
  "answers" : [ {
    "key" : "A",
    "text" : " test end\n"
  }, {
    "key" : "B",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "C",
    "text" : " test runtime end\n"
  }, {
    "key" : "D",
    "text" : " test exception end\n"
  }, {
    "key" : "E",
    "text" : " A Throwable is thrown by main at runtime.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n11. static void test() throws RuntimeException {\n12. try {\n13. System.out.print(\"test \");\n14. throw new RuntimeException();\n15. }\n16. catch (Exception ex) { System.out.print(\"exception \"); }\n17. }\n18. public static void main(String[] args) {\n19. try { test(); }\n20. catch (RuntimeException ex) { System.out.print(\"runtime \"); }\n21. System.out.print(\"end \");\n22. }\nWhat is the result?\n"
}, {
  "number" : 38,
  "answers" : [ {
    "key" : "A",
    "text" : " a\n"
  }, {
    "key" : "B",
    "text" : " b\n"
  }, {
    "key" : "C",
    "text" : " c\n"
  }, {
    "key" : "D",
    "text" : " ac\n"
  }, {
    "key" : "E",
    "text" : " abc\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n33. try {\n34. // some code here\n35. } catch (NullPointerException e1) {\n36. System.out.print(\"a\");\n37. } catch (Exception e2) {\n38. System.out.print(\"b\");\n39. } finally {\n40. System.out.print(\"c\");\n41. }\nIf some sort of exception is thrown at line 34, which output is possible?\n"
}, {
  "number" : 39,
  "answers" : [ {
    "key" : "A",
    "text" : " The instance gets garbage collected.\n"
  }, {
    "key" : "B",
    "text" : " The code on line 33 throws an exception.\n"
  }, {
    "key" : "C",
    "text" : " The code on line 35 throws an exception.\n"
  }, {
    "key" : "D",
    "text" : " The code on line 31 throws an exception.\n"
  }, {
    "key" : "E",
    "text" : " The code on line 33 executes successfully.\n"
  } ],
  "sucessAnswers" : [ "B", "C", "E" ],
  "text" : "Given:\n31. // some code here\n32. try {\n33. // some code here\n34. } catch (SomeException se) {\n35. // some code here\n36. } finally {\n37. // some code here\n38. }\nUnder which three circumstances will the code on line 37 be executed? (Choose three.)\n"
}, {
  "number" : 40,
  "answers" : [ {
    "key" : "A",
    "text" : " 5,6\n"
  }, {
    "key" : "B",
    "text" : " 5,5\n"
  }, {
    "key" : "C",
    "text" : " 6,5\n"
  }, {
    "key" : "D",
    "text" : " 6,6\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n10. int x = 0;\n11. int y = 10;\n12. do {\n13. y--;\n14. ++x;\n15. } while (x < 5);\n16. System.out.print(x + \",\" + y);\nWhat is the result?\n"
}, {
  "number" : 41,
  "answers" : [ {
    "key" : "A",
    "text" : " no output\n"
  }, {
    "key" : "B",
    "text" : " no output\nassert is on\n"
  }, {
    "key" : "C",
    "text" : " assert is on\n"
  }, {
    "key" : "D",
    "text" : " no output\nAn AssertionError is thrown.\n"
  }, {
    "key" : "E",
    "text" : " assert is on\nAn AssertionError is thrown.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given:\n1. public class Donkey2 {\n2. public static void main(String[] args) {\n3. boolean assertsOn = true;\n4. assert (assertsOn) : assertsOn = true;\n5. if(assertsOn) {\n6. System.out.println(\"assert is on\");\n7. }\n8. }\n9. }\nIf class Donkey is invoked twice, the first time without assertions enabled, and the second\ntime with assertions enabled, what are the results?\n"
}, {
  "number" : 42,
  "answers" : [ {
    "key" : "A",
    "text" : " Line 33 must be called within a try block.\n"
  }, {
    "key" : "B",
    "text" : " The exception thrown by method1 in class A is not required to be caught.\n"
  }, {
    "key" : "C",
    "text" : " The method declared on line 31 must be declared to throw a RuntimeException.\n"
  }, {
    "key" : "D",
    "text" : " On line 5 of class A, the call to method2 of class B does not need to be placed in a\ntry/catch block.\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Click the Exhibit button.\nGiven:\n31. public void method() {\n32. A a = new A();\n33. a.method1();\n34. }\nWhich statement is true if a TestException is thrown on line 3 of class B?\n"
}, {
  "number" : 43,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " pi is bigger than 3.\n"
  }, {
    "key" : "C",
    "text" : " An exception occurs at runtime.\n"
  }, {
    "key" : "D",
    "text" : " pi is bigger than 3. Have a nice day.\n"
  }, {
    "key" : "E",
    "text" : " pi is not bigger than 3. Have a nice day.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n11. Float pi = new Float(3.14f);\n12. if (pi > 3) {\n13. System.out.print(\"pi is bigger than 3. \");\n14. }\n15. else {\n16. System.out.print(\"pi is not bigger than 3. \");\n17. }\n18. finally {\n19. System.out.println(\"Have a nice day.\");\n20. }\nWhat is the result?\n"
}, {
  "number" : 44,
  "answers" : [ {
    "key" : "A",
    "text" : " The value \"4\" is printed at the command line.\n"
  }, {
    "key" : "B",
    "text" : " Compilation fails because of an error in line 5.\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails because of an error in line 9.\n"
  }, {
    "key" : "D",
    "text" : " A NullPointerException occurs at runtime.\n"
  }, {
    "key" : "E",
    "text" : " A NumberFormatException occurs at runtime.\n"
  }, {
    "key" : "F",
    "text" : " An IllegalStateException occurs at runtime.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n1. public class Boxer1{\n2. Integer i;\n3. int x;\n4. public Boxer1(int y) {\n5. x = i+y;\n6. System.out.println(x);\n7. }\n8. public static void main(String[] args) {\n9. new Boxer1(new Integer(4));\n10. }\n11. }\nWhat is the result?\n"
}, {
  "number" : 45,
  "answers" : [ {
    "key" : "A",
    "text" : " The equals method does NOT properly override the Object.equals method.\n"
  }, {
    "key" : "B",
    "text" : " Compilation fails because the private attribute p.name cannot be accessed in line 5.\n"
  }, {
    "key" : "C",
    "text" : " To work correctly with hash-based data structures, this class must also implement the\nhashCode method.\n"
  }, {
    "key" : "D",
    "text" : " When adding Person objects to a java.util.Set collection, the equals method in line 4\nwill prevent duplicates.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n1. public class Person {\n2. private String name;\n3. public Person(String name) { this.name = name; }\n4. public boolean equals(Person p) {\n5. return p.name.equals(this.name);\n6. }\n7. }\nWhich statement is true?\n"
}, {
  "number" : 46,
  "answers" : [ {
    "key" : "A",
    "text" : " The hashCode method for a given class can be used to test for object equality and\nobject inequality for that class.\n"
  }, {
    "key" : "B",
    "text" : " The hashCode method is used by the java.util.SortedSet collection class to order the\nelements within that set.\n"
  }, {
    "key" : "C",
    "text" : " The hashCode method for a given class can be used to test for object inequality, but\nNOT object equality, for that class.\n"
  }, {
    "key" : "D",
    "text" : " The only important characteristic of the values returned by a hashCode method is that\nthe distribution of values must follow a Gaussian distribution.\n"
  }, {
    "key" : "E",
    "text" : " The hashCode method is used by the java.util.HashSet collection class to group the\nelements within that set into hash buckets for swift retrieval.\n"
  } ],
  "sucessAnswers" : [ "C", "E" ],
  "text" : "Which two statements are true about the hashCode method? (Choose two.)\n"
}, {
  "number" : 47,
  "answers" : [ {
    "key" : "A",
    "text" : " public int compareTo(Object o){/*more code here*/}\n"
  }, {
    "key" : "B",
    "text" : " public int compareTo(Score other){/*more code here*/}\n"
  }, {
    "key" : "C",
    "text" : " public int compare(Score s1,Score s2){/*more code here*/}\n"
  }, {
    "key" : "D",
    "text" : " public int compare(Object o1,Object o2){/*more code here*/}\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n1. public class Score implements Comparable<Score> {\n2. private int wins, losses;\n3. public Score(int w, int l) { wins = w; losses = l; }\n4. public int getWins() { return wins; }\n5. public int getLosses() { return losses; }\n6. public String toString() {\n7. return \"<\" + wins + \",\" + losses + \">\";\n8. }\n9. // insert code here\n10. }\nWhich method will complete this class?\n"
}, {
  "number" : 48,
  "answers" : [ {
    "key" : "A",
    "text" : " Remove line 14.\n"
  }, {
    "key" : "B",
    "text" : " Replace line 14 with \"int i = iter.next();\".\n"
  }, {
    "key" : "C",
    "text" : " Replace line 13 with \"for (int i : intList) {\".\n"
  }, {
    "key" : "D",
    "text" : " Replace line 13 with \"for (Iterator iter : intList) {\".\n"
  }, {
    "key" : "E",
    "text" : " Replace the method declaration with \"sum(List<int> intList)\".\n"
  }, {
    "key" : "F",
    "text" : " Replace the method declaration with \"sum(List<Integer> intList)\".\n"
  } ],
  "sucessAnswers" : [ "A", "C", "F" ],
  "text" : "Given a pre-generics implementation of a method:\n11. public static int sum(List list) {\n12. int sum = 0;\n13. for ( Iterator iter = list.iterator(); iter.hasNext(); ) {\n14. int i = ((Integer)iter.next()).intValue();\n15. sum += i;\n16. }\n17. return sum;\n18. }\nWhat three changes allow the class to be used with generics and avoid an unchecked\nwarning? (Choose three.)\n"
}, {
  "number" : 49,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails due to an error in line 23.\n"
  }, {
    "key" : "B",
    "text" : " Compilation fails due to an error in line 29.\n"
  }, {
    "key" : "C",
    "text" : " A ClassCastException occurs in line 29.\n"
  }, {
    "key" : "D",
    "text" : " A ClassCastException occurs in line 31.\n"
  }, {
    "key" : "E",
    "text" : " The value of all four objects prints in natural order.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given:\n23. Object [] myObjects = {\n24. new Integer(12),\n25. new String(\"foo\"),\n26. new Integer(5),\n27. new Boolean(true)\n28. };\n29. Arrays.sort(myObjects);\n30. for(int i=0; i<myObjects.length; i++) {\n31. System.out.print(myObjects[i].toString());\n32. System.out.print(\" \");\n33. }\nWhat is the result?\n"
}, {
  "number" : 50,
  "answers" : [ {
    "key" : "A",
    "text" : " import utils.*;\n"
  }, {
    "key" : "B",
    "text" : " static import utils.*;\n"
  }, {
    "key" : "C",
    "text" : " import utils.Repetition.*;\n"
  }, {
    "key" : "D",
    "text" : " static import utils.Repetition.*;\n"
  }, {
    "key" : "E",
    "text" : " import utils.Repetition.twice();\n"
  }, {
    "key" : "F",
    "text" : " import static utils.Repetition.twice;\n"
  }, {
    "key" : "G",
    "text" : " static import utils.Repetition.twice;\n"
  } ],
  "sucessAnswers" : [ "F" ],
  "text" : "Given a class Repetition:\n1. package utils;\n2.\n3. public class Repetition {\n4. public static String twice(String s) { return s + s; }\n5. }\nand given another class Demo:\n1. // insert code here\n2.\n3. public class Demo {\n4. public static void main(String[] args) {\n5. System.out.println(twice(\"pizza\"));\n6. }\n7. }\nWhich code should be inserted at line 1 of Demo.java to compile and run Demo to print\n\"pizzapizza\"?\n"
}, {
  "number" : 51,
  "answers" : [ {
    "key" : "A",
    "text" : " /test/Chess.class\n"
  }, {
    "key" : "B",
    "text" : " /home/bob/Chess.class\n"
  }, {
    "key" : "C",
    "text" : " /test/games/Chess.class\n"
  }, {
    "key" : "D",
    "text" : " /usr/lib/games/Chess.class\n"
  }, {
    "key" : "E",
    "text" : " /home/bob/games/Chess.class\n"
  }, {
    "key" : "F",
    "text" : " inside jarfile /opt/java/lib/Games.jar (with a correct manifest)\n"
  }, {
    "key" : "G",
    "text" : " inside jarfile /home/bob/downloads/Games.jar (with a correct manifest)\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "A UNIX user named Bob wants to replace his chess program with a new one, but he is\nnot sure where the old one is installed. Bob is currently able to run a Java chess program\nstarting from his home directory /home/bob using the command:\njava -classpath /test:/home/bob/downloads/*.jar games.Chess\nBob's CLASSPATH is set (at login time) to:\n/usr/lib:/home/bob/classes:/opt/java/lib:/opt/java/lib/*.jar\nWhat is a possible location for the Chess.class file?\n"
}, {
  "number" : 52,
  "answers" : [ {
    "key" : "A",
    "text" : " If the compile is successful, Utils.class is added to the source directory.\n"
  }, {
    "key" : "B",
    "text" : " The compiler returns an invalid flag error.\n"
  }, {
    "key" : "C",
    "text" : " If the compile is successful, Utils.class is added to the classes directory.\n"
  }, {
    "key" : "D",
    "text" : " If the compile is successful, Utils.class is added to the bigProject directory.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given the following directory structure:\nbigProject\n|--source\n| |--Utils.java\n|\n|--classes\n|--\nAnd the following command line invocation:\njavac -d classes source/Utils.java\nAssume the current directory is bigProject, what is the result?\n"
}, {
  "number" : 53,
  "answers" : [ {
    "key" : "A",
    "text" : " java MainClass if run from the /apps directory\n"
  }, {
    "key" : "B",
    "text" : " java com.company.application.MainClass if run from the /apps directory\n"
  }, {
    "key" : "C",
    "text" : " java -classpath /apps com.company.application.MainClass if run from any directory\n"
  }, {
    "key" : "D",
    "text" : " java -classpath . MainClass if run from the /apps/com/company/application directory\n"
  }, {
    "key" : "E",
    "text" : " java -classpath /apps/com/company/application:. MainClass if run from the /apps\ndirectory\n"
  }, {
    "key" : "F",
    "text" : " java com.company.application.MainClass if run from the\n/apps/com/company/application directory\n"
  } ],
  "sucessAnswers" : [ "B", "C" ],
  "text" : "Given:\n1. package com.company.application;\n2.\n3. public class MainClass {\n4. public static void main(String[] args) {}\n5. }\nAnd MainClass exists in the /apps/com/company/application directory. Assume the\nCLASSPATH environment variable is set to \".\" (current directory).Which two java\ncommands entered at the command line will run MainClass? (Choose two.)\n"
}, {
  "number" : 54,
  "answers" : [ {
    "key" : "A",
    "text" : " A class's finalize() method CANNOT be invoked explicitly.\n"
  }, {
    "key" : "B",
    "text" : " super.finalize() is called implicitly by any overriding finalize() method.\n"
  }, {
    "key" : "C",
    "text" : " The finalize() method for a given object is called no more than once by the garbage\ncollector.\n"
  }, {
    "key" : "D",
    "text" : " The order in which finalize() is called on two objects is based on the order in which\nthe two objects became finalizable.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Which statement is true?\n"
}, {
  "number" : 55,
  "answers" : [ {
    "key" : "A",
    "text" : " 81\n"
  }, {
    "key" : "B",
    "text" : " 82\n"
  }, {
    "key" : "C",
    "text" : " 91\n"
  }, {
    "key" : "D",
    "text" : " 92\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "F",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n3. public class Batman {\n4. int squares = 81;\n5. public static void main(String[] args) {\n6. new Batman().go();\n7. }\n8. void go() {\n9. incr(++squares);\n10. System.out.println(squares);\n11. }\n12. void incr(int squares) { squares += 10; }\n13. }\nWhat is the result?\n"
}, {
  "number" : 56,
  "answers" : [ {
    "key" : "A",
    "text" : " No output is produced.\n1 2 3\n"
  }, {
    "key" : "B",
    "text" : " No output is produced.\n2 3 4\n"
  }, {
    "key" : "C",
    "text" : " No output is produced.\n1 2 3 4\n"
  }, {
    "key" : "D",
    "text" : " An exception is thrown at runtime.\n1 2 3\n"
  }, {
    "key" : "E",
    "text" : " An exception is thrown at runtime.\n2 3 4\n"
  }, {
    "key" : "F",
    "text" : " An exception is thrown at runtime.\n1 2 3 4\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n15. public class Yippee {\n16. public static void main(String [] args) {\n17. for(int x = 1; x < args.length; x++) {\n18. System.out.print(args[x] + \" \");\n19. }\n20. }\n21. }\nand two separate command line invocations:\njava Yippee\njava Yippee 1 2 3 4\nWhat is the result?\n"
}, {
  "number" : 57,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "C",
    "text" : " doStuff x = 6 main x = 6\n"
  }, {
    "key" : "D",
    "text" : " doStuff x = 5 main x = 5\n"
  }, {
    "key" : "E",
    "text" : " doStuff x = 5 main x = 6\n"
  }, {
    "key" : "F",
    "text" : " doStuff x = 6 main x = 5\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n13. public class Pass {\n14. public static void main(String [] args) {\n15. int x = 5;\n16. Pass p = new Pass();\n17. p.doStuff(x);\n18. System.out.print(\" main x = \" + x);\n19. }\n20.\n21. void doStuff(int x) {\n22. System.out.print(\" doStuff x = \" + x++);\n23. }\n24. }\nWhat is the result?\n"
}, {
  "number" : 58,
  "answers" : [ {
    "key" : "A",
    "text" : " 0\n"
  }, {
    "key" : "B",
    "text" : " 1\n"
  }, {
    "key" : "C",
    "text" : " 2\n"
  }, {
    "key" : "D",
    "text" : " 3\n"
  }, {
    "key" : "E",
    "text" : " 4\n"
  }, {
    "key" : "F",
    "text" : " 6\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\n3. interface Animal { void makeNoise(); }\n4. class Horse implements Animal {\n5. Long weight = 1200L;\n6. public void makeNoise() { System.out.println(\"whinny\"); }\n7. }\n8. public class Icelandic extends Horse {\n9. public void makeNoise() { System.out.println(\"vinny\"); }\n10. public static void main(String[] args) {\n11. Icelandic i1 = new Icelandic();\n12. Icelandic i2 = new Icelandic();\n12. Icelandic i3 = new Icelandic();\n13. i3 = i1; i1 = i2; i2 = null; i3 = i1;\n14. }\n15. }\nWhen line 14 is reached, how many objects are eligible for the garbage collector?\n"
}, {
  "number" : 59,
  "answers" : [ {
    "key" : "A",
    "text" : " add import animals.mammals.*; at line 2 in Salmon.java\n"
  }, {
    "key" : "B",
    "text" : " add import animals.fish.*; at line 2 in GrizzlyBear.java\n"
  }, {
    "key" : "C",
    "text" : " add import animals.fish.Salmon.*; at line 2 in GrizzlyBear.java\n"
  }, {
    "key" : "D",
    "text" : " add import animals.mammals.GrizzlyBear.*; at line 2 in Salmon.java\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given two files, GrizzlyBear.java and Salmon.java:\n1. package animals.mammals;\n2.\n3. public class GrizzlyBear extends Bear {\n4. void hunt() {\n5. Salmon s = findSalmon();\n6. s.consume();\n7. }\n8. }\n1. package animals.fish;\n2.\n3. public class Salmon extends Fish {\n4. public void consume() { /* do stuff */ }\n5. }\nIf both classes are in the correct directories for their packages, and the Mammal class\ncorrectly defines the findSalmon() method, which change allows this code to compile?\n"
}, {
  "number" : 60,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "C",
    "text" : " The variable first is set to null.\n"
  }, {
    "key" : "D",
    "text" : " The variable first is set to elements[0].\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n11. String[] elements = { \"for\", \"tea\", \"too\" };\n12. String first = (elements.length > 0) elements[0] : null;\nWhat is the result?\n"
}, {
  "number" : 61,
  "answers" : [ {
    "key" : "A",
    "text" : " Inheritance\n"
  }, {
    "key" : "B",
    "text" : " Low cohesion\n"
  }, {
    "key" : "C",
    "text" : " Tight coupling\n"
  }, {
    "key" : "D",
    "text" : " High cohesion\n"
  }, {
    "key" : "E",
    "text" : " Loose coupling\n"
  }, {
    "key" : "F",
    "text" : " Object immutability\n"
  } ],
  "sucessAnswers" : [ "B", "C" ],
  "text" : "A company has a business application that provides its users with many different reports:\nreceivables reports, payables reports, revenue projects, and so on. The company has just\npurchased some new, state-of-the-art, wireless printers, and a programmer has been\nassigned the task of enhancing all of the reports to use not only the company's old\nprinters, but the new wireless printers as well. When the programmer starts looking into\nthe application, the programmer discovers that because of the design of the application, it\nis necessary to make changes to each report to support the new printers.Which two design\nconcepts most likely explain this situation? (Choose two.)\n"
}, {
  "number" : 62,
  "answers" : [ {
    "key" : "A",
    "text" : " 12\n"
  }, {
    "key" : "B",
    "text" : " The code runs with no output.\n"
  }, {
    "key" : "C",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails because of an error in line 21.\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails because of an error in line 22.\n"
  }, {
    "key" : "F",
    "text" : " Compilation fails because of an error in line 31.\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\n10. public class SuperCalc {\n11. protected static int multiply(int a, int b) { return a * b;}\n12. }\nand:\n20. public class SubCalc extends SuperCalc{\n21. public static int multiply(int a, int b) {\n22. int c = super.multiply(a, b);\n23. return c;\n24. }\n25. }\nand:\n30. SubCalc sc = new SubCalc ();\n31. System.out.println(sc.multiply(3,4));\n32. System.out.println(SubCalc.multiply(2,2));\nWhat is the result?\n"
}, {
  "number" : 63,
  "answers" : [ {
    "key" : "A",
    "text" : " b 3\n"
  }, {
    "key" : "B",
    "text" : " b 8\n"
  }, {
    "key" : "C",
    "text" : " b 13\n"
  }, {
    "key" : "D",
    "text" : " f 3\n"
  }, {
    "key" : "E",
    "text" : " f 8\n"
  }, {
    "key" : "F",
    "text" : " f 13\n"
  }, {
    "key" : "G",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "H",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n31. class Foo {\n32. public int a = 3;\n33. public void addFive() { a += 5; System.out.print(\"f \"); }\n34. }\n35. class Bar extends Foo {\n36. public int a = 8;\n37. public void addFive() { this.a += 5; System.out.print(\"b \" ); }\n38. }\nInvoked with:\nFoo f = new Bar();\nf.addFive();\nSystem.out.println(f.a);\nWhat is the result?\n"
}, {
  "number" : 64,
  "answers" : [ {
    "key" : "A",
    "text" : " Inheritance\n"
  }, {
    "key" : "B",
    "text" : " Tight coupling\n"
  }, {
    "key" : "C",
    "text" : " Low cohesion\n"
  }, {
    "key" : "D",
    "text" : " High cohesion\n"
  }, {
    "key" : "E",
    "text" : " Loose coupling\n"
  }, {
    "key" : "F",
    "text" : " Object immutability\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "A company that makes Computer Assisted Design (CAD) software has, within its\napplication, some utility classes that are used to perform 3D rendering tasks. The\ncompany's chief scientist has just improved the performance of one of the utility classes'\nkey rendering algorithms, and has assigned a programmer to replace the old algorithm\nwith the new algorithm. When the programmer begins researching the utility classes, she\nis happy to discover that the algorithm to be replaced exists in only one class. The\nprogrammer reviews that class's API, and replaces the old algorithm with the new\nalgorithm, being careful that her changes adhere strictly to the class's API. Once testing\nhas begun, the programmer discovers that other classes that use the class she changed are\nno longer working properly. What design flaw is most likely the cause of these new\nbugs?\n"
}, {
  "number" : 65,
  "answers" : [ {
    "key" : "A",
    "text" : " 420 is the output.\n"
  }, {
    "key" : "B",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "C",
    "text" : " All constructors must be declared public.\n"
  }, {
    "key" : "D",
    "text" : " Constructors CANNOT use the private modifier.\n"
  }, {
    "key" : "E",
    "text" : " Constructors CANNOT use the protected modifier.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n1. class ClassA {\n2. public int numberOfInstances;\n3. protected ClassA(int numberOfInstances) {\n4. this.numberOfInstances = numberOfInstances;\n5. }\n6. }\n7. public class ExtendedA extends ClassA {\n8. private ExtendedA(int numberOfInstances) {\n9. super(numberOfInstances);\n10. }\n11. public static void main(String[] args) {\n12. ExtendedA ext = new ExtendedA(420);\n13. System.out.print(ext.numberOfInstances);\n14. }\n15. }\nWhich statement is true?\n"
}, {
  "number" : 66,
  "answers" : [ {
    "key" : "A",
    "text" : " p0 = p1;\n"
  }, {
    "key" : "B",
    "text" : " p1 = p2;\n"
  }, {
    "key" : "C",
    "text" : " p2 = p4;\n"
  }, {
    "key" : "D",
    "text" : " p2 = (ClassC)p1;\n"
  }, {
    "key" : "E",
    "text" : " p1 = (ClassB)p3;\n"
  }, {
    "key" : "F",
    "text" : " p2 = (ClassC)p4;\n"
  } ],
  "sucessAnswers" : [ "A", "E", "F" ],
  "text" : "Given:\n11. class ClassA {}\n12. class ClassB extends ClassA {}\n13. class ClassC extends ClassA {}\nand:\n21. ClassA p0 = new ClassA();\n22. ClassB p1 = new ClassB();\n23. ClassC p2 = new ClassC();\n24. ClassA p3 = new ClassB();\n25. ClassA p4 = new ClassC();\nWhich three are valid? (Choose three.)\n"
}, {
  "number" : 67,
  "answers" : [ {
    "key" : "A",
    "text" : " The output is mm.\n"
  }, {
    "key" : "B",
    "text" : " The output is mc.\n"
  }, {
    "key" : "C",
    "text" : " Component is-a Meter.\n"
  }, {
    "key" : "D",
    "text" : " Component has-a Meter.\n"
  }, {
    "key" : "E",
    "text" : " DeluxeThingy is-a Component.\n"
  }, {
    "key" : "F",
    "text" : " DeluxeThingy has-a Component.\n"
  } ],
  "sucessAnswers" : [ "A", "F" ],
  "text" : "Given:\n5. class Thingy { Meter m = new Meter(); }\n6. class Component { void go() { System.out.print(\"c\"); } }\n7. class Meter extends Component { void go() { System.out.print(\"m\"); } }\n8.\n9. class DeluxeThingy extends Thingy {\n10. public static void main(String[] args) {\n11. DeluxeThingy dt = new DeluxeThingy();\n12. dt.m.go();\n13. Thingy t = new DeluxeThingy();\n14. t.m.go();\n15. }\n16. }\nWhich two are true? (Choose two.)\n"
}, {
  "number" : 68,
  "answers" : [ {
    "key" : "A",
    "text" : " Cat is-a Animal\n"
  }, {
    "key" : "B",
    "text" : " Cat is-a Jumper\n"
  }, {
    "key" : "C",
    "text" : " Dog is-a Animal\n"
  }, {
    "key" : "D",
    "text" : " Dog is-a Jumper\n"
  }, {
    "key" : "E",
    "text" : " Cat has-a Animal\n"
  }, {
    "key" : "F",
    "text" : " Beagle has-a Tail\n"
  }, {
    "key" : "G",
    "text" : " Beagle has-a Jumper\n"
  } ],
  "sucessAnswers" : [ "B", "C", "F" ],
  "text" : "Given:\n10. interface Jumper { public void jump(); }\n...\n20. class Animal {}\n...\n30. class Dog extends Animal {\n31. Tail tail;\n32. }\n...\n40. class Beagle extends Dog implements Jumper{\n41. public void jump() {}\n42. }\n...\n50. class Cat implements Jumper{\n51. public void jump() {}\n52. }\nWhich three are true? (Choose three.)\n"
}, {
  "number" : 69,
  "answers" : [ {
    "key" : "A",
    "text" : " 0\n"
  }, {
    "key" : "B",
    "text" : " 1\n"
  }, {
    "key" : "C",
    "text" : " 2\n"
  }, {
    "key" : "D",
    "text" : " 3\n"
  }, {
    "key" : "E",
    "text" : " 4\n"
  }, {
    "key" : "F",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "G",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n1. import java.util.*;\n2. public class WrappedString {\n3. private String s;\n4. public WrappedString(String s) { this.s = s; }\n5. public static void main(String[] args) {\n6. HashSet<Object> hs = new HashSet<Object>();\n7. WrappedString ws1 = new WrappedString(\"aardvark\");\n8. WrappedString ws2 = new WrappedString(\"aardvark\");\n9. String s1 = new String(\"aardvark\");\n10. String s2 = new String(\"aardvark\");\n11. hs.add(ws1); hs.add(ws2); hs.add(s1); hs.add(s2);\n12. System.out.println(hs.size()); } }\nWhat is the result?\n"
}, {
  "number" : 70,
  "answers" : [ {
    "key" : "A",
    "text" : " public class MinMax<?> {\n"
  }, {
    "key" : "B",
    "text" : " public class MinMax<? extends Number> {\n"
  }, {
    "key" : "C",
    "text" : " public class MinMax<N extends Object> {\n"
  }, {
    "key" : "D",
    "text" : " public class MinMax<N extends Number> {\n"
  }, {
    "key" : "E",
    "text" : " public class MinMax<? extends Object> {\n"
  }, {
    "key" : "F",
    "text" : " public class MinMax<N extends Integer> {\n"
  } ],
  "sucessAnswers" : [ "D", "F" ],
  "text" : "Given:\n11. // insert code here\n12. private N min, max;\n13. public N getMin() { return min; }\n14. public N getMax() { return max; }\n15. public void add(N added) {\n16. if (min == null || added.doubleValue() < min.doubleValue())\n17. min = added;\n18. if (max == null || added.doubleValue() > max.doubleValue())\n19. max = added;\n20. }\n21. }\nWhich two, inserted at line 11, will allow the code to compile? (Choose two.)\n"
}, {
  "number" : 71,
  "answers" : [ {
    "key" : "A",
    "text" : " list.add(\"foo\");\n"
  }, {
    "key" : "B",
    "text" : " Object o = list;\n"
  }, {
    "key" : "C",
    "text" : " String s = list.get(0);\n"
  }, {
    "key" : "D",
    "text" : " list = new ArrayList<String>();\n"
  }, {
    "key" : "E",
    "text" : " list = new ArrayList<Object>();\n"
  } ],
  "sucessAnswers" : [ "B", "C", "D" ],
  "text" : "Given:\n3. import java.util.*;\n4. public class G1 {\n5. public void takeList(List<? extends String> list) {\n6. // insert code here\n7. }\n8. }\nWhich three code fragments, inserted independently at line 6, will compile? (Choose\nthree.)\n"
}, {
  "number" : 72,
  "answers" : [ {
    "key" : "A",
    "text" : " apple pear\n"
  }, {
    "key" : "B",
    "text" : " banana pear\n"
  }, {
    "key" : "C",
    "text" : " apple apple\n"
  }, {
    "key" : "D",
    "text" : " apple banana\n"
  }, {
    "key" : "E",
    "text" : " banana banana\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given that the elements of a PriorityQueue are ordered according to natural ordering,\nand:\n2. import java.util.*;\n3. public class GetInLine {\n4. public static void main(String[] args) {\n5. PriorityQueue<String> pq = new PriorityQueue<String>();\n6. pq.add(\"banana\");\n7. pq.add(\"pear\");\n8. pq.add(\"apple\");\n9. System.out.println(pq.poll() + \" \" + pq.peek());\n10. }\n11. }\nWhat is the result?\n"
}, {
  "number" : 73,
  "answers" : [ {
    "key" : "A",
    "text" : " Remove line 14.\n"
  }, {
    "key" : "B",
    "text" : " Replace line 13 with \"for (int i : intList) {\".\n"
  }, {
    "key" : "C",
    "text" : " Replace line 13 with \"for (Iterator iter : intList) {\".\n"
  }, {
    "key" : "D",
    "text" : " Replace the method declaration with \"sum(List<int> intList)\".\n"
  }, {
    "key" : "E",
    "text" : " Replace the method declaration with \"sum(List<Integer> intList)\".\n"
  } ],
  "sucessAnswers" : [ "A", "B", "E" ],
  "text" : "Given a pre-generics implementation of a method:\n11. public static int sum(List list) {\n12. int sum = 0;\n13. for ( Iterator iter = list.iterator(); iter.hasNext(); ) {\n14. int i = ((Integer)iter.next()).intValue();\n15. sum += i;\n16. }\n17. return sum;\n18. }\nWhich three changes must be made to the method sum to use generics? (Choose three.)\n"
}, {
  "number" : 74,
  "answers" : [ {
    "key" : "A",
    "text" : " The expressions (ONE == ONE) and ONE.equals(ONE) are both guaranteed to be\ntrue.\n"
  }, {
    "key" : "B",
    "text" : " The expression (ONE < TWO) is guaranteed to be true and ONE.compareTo(TWO) is\nguaranteed to be less than one.\n"
  }, {
    "key" : "C",
    "text" : " The Example values cannot be used in a raw java.util.HashMap; instead, the\nprogrammer must use a java.util.EnumMap.\n"
  }, {
    "key" : "D",
    "text" : " The Example values can be used in a java.util.SortedSet, but the set will NOT be\nsorted because enumerated types do NOT implement java.lang.Comparable.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\nenum Example { ONE, TWO, THREE }\nWhich statement is true?\n"
}, {
  "number" : 75,
  "answers" : [ {
    "key" : "A",
    "text" : " 2 1 0\n"
  }, {
    "key" : "B",
    "text" : " 2 1 1\n"
  }, {
    "key" : "C",
    "text" : " 3 2 1\n"
  }, {
    "key" : "D",
    "text" : " 3 2 2\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "F",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n3. import java.util.*;\n4. public class Mapit {\n5. public static void main(String[] args) {\n6. Set<Integer> set = new HashSet<Integer>();\n7. Integer i1 = 45;\n8. Integer i2 = 46;\n9. set.add(i1);\n10. set.add(i1);\n11. set.add(i2); System.out.print(set.size() + \" \");\n12. set.remove(i1); System.out.print(set.size() + \" \");\n13. i2 = 47;\n14. set.remove(i2); System.out.print(set.size() + \" \");\n15. }\n16. }\nWhat is the result?\n"
}, {
  "number" : 76,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "C",
    "text" : " [608, 609, 610, 612] [608, 610]\n"
  }, {
    "key" : "D",
    "text" : " [608, 609, 610, 612] [608, 609, 610]\n"
  }, {
    "key" : "E",
    "text" : " [606, 608, 609, 610, 612] [608, 610]\n"
  }, {
    "key" : "F",
    "text" : " [606, 608, 609, 610, 612] [608, 609, 610]\n"
  } ],
  "sucessAnswers" : [ "F" ],
  "text" : "Given:\n12. import java.util.*;\n13. public class Explorer1 {\n14. public static void main(String[] args) {\n15. TreeSet<Integer> s = new TreeSet<Integer>();\n16. TreeSet<Integer> subs = new TreeSet<Integer>();\n17. for(int i = 606; i < 613; i++) 18. if(i%2 == 0) s.add(i);\n19. subs = (TreeSet)s.subSet(608, true, 611, true);\n20. s.add(609);\n21. System.out.println(s + \" \" + subs);\n22. }\n23. }\nWhat is the result?\n"
}, {
  "number" : 77,
  "answers" : [ {
    "key" : "A",
    "text" : " 2 -1\n"
  }, {
    "key" : "B",
    "text" : " 2 -4\n"
  }, {
    "key" : "C",
    "text" : " 2 -5\n"
  }, {
    "key" : "D",
    "text" : " 3 -1\n"
  }, {
    "key" : "E",
    "text" : " 3 -4\n"
  }, {
    "key" : "F",
    "text" : " 3 -5\n"
  }, {
    "key" : "G",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "H",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given:\n3. import java.util.*;\n4. public class Quest {\n5. public static void main(String[] args) {\n6. String[] colors = {\"blue\", \"red\", \"green\", \"yellow\", \"orange\"};\n7. Arrays.sort(colors);\n8. int s2 = Arrays.binarySearch(colors, \"orange\");\n9. int s3 = Arrays.binarySearch(colors, \"violet\");\n10. System.out.println(s2 + \" \" + s3);\n11. }\n12. }\nWhat is the result?\n"
}, {
  "number" : 78,
  "answers" : [ {
    "key" : "A",
    "text" : " Arrays.sort(s);\n"
  }, {
    "key" : "B",
    "text" : " s = new TreeSet(s);\n"
  }, {
    "key" : "C",
    "text" : " Collections.sort(s);\n"
  }, {
    "key" : "D",
    "text" : " s = new SortedSet(s);\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n34. HashMap props = new HashMap();\n35. props.put(\"key45\", \"some value\");\n36. props.put(\"key12\", \"some other value\");\n37. props.put(\"key39\", \"yet another value\");\n38. Set s = props.keySet();\n39. // insert code here\nWhat, inserted at line 39, will sort the keys in the props HashMap?\n"
}, {
  "number" : 79,
  "answers" : [ {
    "key" : "A",
    "text" : " It is possible to synchronize static methods.\n"
  }, {
    "key" : "B",
    "text" : " When a thread has yielded as a result of yield(), it releases its locks.\n"
  }, {
    "key" : "C",
    "text" : " When a thread is sleeping as a result of sleep(), it releases its locks.\n"
  }, {
    "key" : "D",
    "text" : " The Object.wait() method can be invoked only from a synchronized context.\n"
  }, {
    "key" : "E",
    "text" : " The Thread.sleep() method can be invoked only from a synchronized context.\n"
  }, {
    "key" : "F",
    "text" : " When the thread scheduler receives a notify() request, and notifies a thread, that thread\nimmediately releases its lock.\n"
  } ],
  "sucessAnswers" : [ "A", "D" ],
  "text" : "Which two statements are true? (Choose two.)\n"
}, {
  "number" : 80,
  "answers" : [ {
    "key" : "A",
    "text" : " This code can throw an InterruptedException.\n"
  }, {
    "key" : "B",
    "text" : " This code can throw an IllegalMonitorStateException.\n"
  }, {
    "key" : "C",
    "text" : " This code can throw a TimeoutException after ten minutes.\n"
  }, {
    "key" : "D",
    "text" : " Reversing the order of obj.wait() and obj.notify() might cause this method to complete\nnormally.\n"
  }, {
    "key" : "E",
    "text" : " A call to notify() or notifyAll() from another thread might cause this method to\ncomplete normally.\n"
  }, {
    "key" : "F",
    "text" : " This code does NOT compile unless \"obj.wait()\" is replaced with \"((Thread)\nobj).wait()\".\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n7. void waitForSignal() {\n8. Object obj = new Object();\n9. synchronized (Thread.currentThread()) {\n10. obj.wait();\n11. obj.notify();\n12. }\n13. }\nWhich statement is true?\n"
}, {
  "number" : 81,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "C",
    "text" : " The code executes and prints \"StartedComplete\".\n"
  }, {
    "key" : "D",
    "text" : " The code executes and prints \"StartedComplete0123\".\n"
  }, {
    "key" : "E",
    "text" : " The code executes and prints \"Started0123Complete\".\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\n1. public class TestOne implements Runnable {\n2. public static void main (String[] args) throws Exception {\n3. Thread t = new Thread(new TestOne());\n4. t.start();\n5. System.out.print(\"Started\");\n6. t.join();\n7. System.out.print(\"Complete\");\n8. }\n9. public void run() {\n10. for (int i = 0; i < 4; i++) {\n11. System.out.print(i);\n12. }\n13. }\n14. }\nWhat can be a result?\n"
}, {
  "number" : 82,
  "answers" : [ {
    "key" : "A",
    "text" : " private synchronized Object o;\n"
  }, {
    "key" : "B",
    "text" : " void go() {\nsynchronized() { /* code here */ }\n"
  }, {
    "key" : "C",
    "text" : " public synchronized void go() { /* code here */ }\n"
  }, {
    "key" : "D",
    "text" : " private synchronized(this) void go() { /* code here */ }\n"
  }, {
    "key" : "E",
    "text" : " void go() {\nsynchronized(Object.class) { /* code here */ }\n"
  }, {
    "key" : "F",
    "text" : " void go() {\nObject o = new Object();\nsynchronized(o) { /* code here */ }\n"
  } ],
  "sucessAnswers" : [ "C", "E", "F" ],
  "text" : "Which three will compile and run without exception? (Choose three.)\n"
}, {
  "number" : 83,
  "answers" : [ {
    "key" : "A",
    "text" : " move the line 12 print statement into the foo() method\n"
  }, {
    "key" : "B",
    "text" : " change line 7 to public synchronized void go() {\n"
  }, {
    "key" : "C",
    "text" : " change the variable declaration on line 2 to private volatile int x;\n"
  }, {
    "key" : "D",
    "text" : " wrap the code inside the foo() method with a synchronized( this ) block\n"
  }, {
    "key" : "E",
    "text" : " wrap the for loop code inside the go() method with a synchronized block\nsynchronized(this) { // for loop code here }\n"
  } ],
  "sucessAnswers" : [ "A", "D" ],
  "text" : "Given:\n1. public class TestFive {\n2. private int x;\n3. public void foo() {\n4. int current = x;\n5. x = current + 1;\n6. }\n7. public void go() {\n8. for(int i = 0; i < 5; i++) {\n9. new Thread() {\n10. public void run() {\n11. foo();\n12. System.out.print(x + \", \");\n13. } }.start();\n14. } }\nWhich two changes, taken together, would guarantee the output: 1, 2, 3, 4, 5, ? (Choose\ntwo.)\n"
}, {
  "number" : 84,
  "answers" : [ {
    "key" : "A",
    "text" : " The Thread.sleep() method can take t1 as an argument.\n"
  }, {
    "key" : "B",
    "text" : " The Object.notify() method can take t1 as an argument.\n"
  }, {
    "key" : "C",
    "text" : " The Thread.yield() method can take t1 as an argument.\n"
  }, {
    "key" : "D",
    "text" : " The Thread.setPriority() method can take t1 as an argument.\n"
  }, {
    "key" : "E",
    "text" : " The Object.notify() method arbitrarily chooses which thread to notify.\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given that t1 is a reference to a live thread, which is true?\n"
}, {
  "number" : 85,
  "answers" : [ {
    "key" : "A",
    "text" : " Cat\n"
  }, {
    "key" : "B",
    "text" : " Dog\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "D",
    "text" : " The code runs with no output.\n"
  }, {
    "key" : "E",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n11. Runnable r = new Runnable() {\n12. public void run() {\n13. System.out.print(\"Cat\");\n14. }\n15. };\n16. Thread t = new Thread(r) {\n17. public void run() {\n18. System.out.print(\"Dog\");\n19. }\n20. };\n21. t.start();\nWhat is the result?\n"
}, {
  "number" : 86,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "C",
    "text" : " The code executes normally and prints \"bar\".\n"
  }, {
    "key" : "D",
    "text" : " The code executes normally, but nothing prints.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given:\n1. public class Threads5 {\n2. public static void main (String[] args) {\n3. new Thread(new Runnable() {\n4. public void run() {\n5. System.out.print(\"bar\");\n6. }}).start();\n7. }\n8. }\nWhat is the result?\n"
}, {
  "number" : 87,
  "answers" : [ {
    "key" : "A",
    "text" : " int foo() { /* more code here */ }\n"
  }, {
    "key" : "B",
    "text" : " void foo() { /* more code here */ }\n"
  }, {
    "key" : "C",
    "text" : " public void foo() { /* more code here */ }\n"
  }, {
    "key" : "D",
    "text" : " private void foo() { /* more code here */ }\n"
  }, {
    "key" : "E",
    "text" : " protected void foo() { /* more code here */ }\n"
  } ],
  "sucessAnswers" : [ "B", "C", "E" ],
  "text" : "Given:\n10. class One {\n11. void foo() { }\n12. }\n13. class Two extends One {\n14. //insert method here\n15. }\nWhich three methods, inserted individually at line 14, will correctly complete class Two?\n(Choose three.)\n"
}, {
  "number" : 88,
  "answers" : [ {
    "key" : "A",
    "text" : " double getSalesAmount() { return 1230.45; }\n"
  }, {
    "key" : "B",
    "text" : " public double getSalesAmount() { return 1230.45; }\n"
  }, {
    "key" : "C",
    "text" : " private double getSalesAmount() { return 1230.45; }\n"
  }, {
    "key" : "D",
    "text" : " protected double getSalesAmount() { return 1230.45; }\n"
  } ],
  "sucessAnswers" : [ "B", "D" ],
  "text" : "Given:\n10. abstract public class Employee {\n11. protected abstract double getSalesAmount();\n12. public double getCommision() {\n13. return getSalesAmount() * 0.15;\n14. }\n15. }\n16. class Sales extends Employee {\n17. // insert method here\n18. }\nWhich two methods, inserted independently at line 17, correctly complete the Sales\nclass? (Choose two.)\n"
}, {
  "number" : 89,
  "answers" : [ {
    "key" : "A",
    "text" : " 13\n"
  }, {
    "key" : "B",
    "text" : " 134\n"
  }, {
    "key" : "C",
    "text" : " 1234\n"
  }, {
    "key" : "D",
    "text" : " 2134\n"
  }, {
    "key" : "E",
    "text" : " 2143\n"
  }, {
    "key" : "F",
    "text" : " 4321\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given:\n1. class X {\n2. X() { System.out.print(1); }\n3. X(int x) {\n4. this(); System.out.print(2);\n5. }\n6. }\n7. public class Y extends X {\n8. Y() { super(6); System.out.print(3); }\n9. Y(int y) {\n10. this(); System.out.println(4);\n11. }\n12. public static void main(String[] a) { new Y(5); }\n13. }\nWhat is the result?\n"
}, {
  "number" : 90,
  "answers" : [ {
    "key" : "A",
    "text" : " import com.sun.scjp.Geodetics;\npublic class TerraCarta {\npublic double halfway()\n{ return Geodetics.DIAMETER/2.0; }\n"
  }, {
    "key" : "B",
    "text" : " import static com.sun.scjp.Geodetics;\npublic class TerraCarta{\npublic double halfway() { return DIAMETER/2.0; } }\n"
  }, {
    "key" : "C",
    "text" : " import static com.sun.scjp.Geodetics.*;\npublic class TerraCarta {\npublic double halfway() { return DIAMETER/2.0; } }\n"
  }, {
    "key" : "D",
    "text" : " package com.sun.scjp;\npublic class TerraCarta {\npublic double halfway() { return DIAMETER/2.0; } }\n"
  } ],
  "sucessAnswers" : [ "A", "C" ],
  "text" : "Given:\n10. package com.sun.scjp;\n11. public class Geodetics {\n12. public static final double DIAMETER = 12756.32; // kilometers\n13. }\nWhich two correctly access the DIAMETER member of the Geodetics class? (Choose\ntwo.)\n"
}, {
  "number" : 91,
  "answers" : [ {
    "key" : "A",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "B",
    "text" : " Compilation fails because of an error in line 7.\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails because of an error in line 4.\n"
  }, {
    "key" : "D",
    "text" : " Compilation succeeds and no runtime errors with class A occur.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given:\n1. public class A {\n2. public void doit() {\n3. }\n4. public String doit() {\n5. return \"a\";\n6. }\n7. public double doit(int x) {\n8. return 1.0;\n9. }\n10. }\nWhat is the result?\n"
}, {
  "number" : 92,
  "answers" : [ {
    "key" : "A",
    "text" : " Line 35 will not compile.\n"
  }, {
    "key" : "B",
    "text" : " Line 36 will not compile.\n"
  }, {
    "key" : "C",
    "text" : " Line 37 will not compile.\n"
  }, {
    "key" : "D",
    "text" : " Line 38 will not compile.\n"
  } ],
  "sucessAnswers" : [ "A", "D" ],
  "text" : "Given:\n35. String #name = \"Jane Doe\";\n36. int $age = 24;\n37. Double _height = 123.5;\n38. double ~temp = 37.5;\nWhich two statements are true? (Choose two.)\n"
}, {
  "number" : 93,
  "answers" : [ {
    "key" : "A",
    "text" : " Foo { public int bar() { return 1; }\n"
  }, {
    "key" : "B",
    "text" : " new Foo { public int bar() { return 1; }\n"
  }, {
    "key" : "C",
    "text" : " new Foo() { public int bar() { return 1; }\n"
  }, {
    "key" : "D",
    "text" : " new class Foo { public int bar() { return 1; }\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given:\n10. interface Foo { int bar(); }\n11. public class Sprite {\n12. public int fubar( Foo foo ) { return foo.bar(); }\n13. public void testFoo() {\n14. fubar(\n15. // insert code here\n16. );\n17. }\n18. }\nWhich code, inserted at line 15, allows the class Sprite to compile?\n"
}, {
  "number" : 94,
  "answers" : [ {
    "key" : "A",
    "text" : " Mr. John Doe\n"
  }, {
    "key" : "B",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails because of an error in line 12.\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails because of an error in line 15.\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails because of an error in line 20.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n11. public enum Title {\n12. MR(\"Mr.\"), MRS(\"Mrs.\"), MS(\"Ms.\");\n13. private final String title;\n14. private Title(String t) { title = t; }\n15. public String format(String last, String first) {\n16. return title + \" \" + first + \" \" + last;\n17. }\n18. }\n19. public static void main(String[] args) {\n20. System.out.println(Title.MR.format(\"Doe\", \"John\"));\n21. }\nWhat is the result?\n"
}, {
  "number" : 95,
  "answers" : [ {
    "key" : "A",
    "text" : " 1\n"
  }, {
    "key" : "B",
    "text" : " 2\n"
  }, {
    "key" : "C",
    "text" : " 3\n"
  }, {
    "key" : "D",
    "text" : " 4\n"
  }, {
    "key" : "E",
    "text" : " 5\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given the following six method names:\naddListener\naddMouseListener\nsetMouseListener\ndeleteMouseListener\nremoveMouseListener\nregisterMouseListener\nHow many of these method names follow JavaBean Listener naming rules?\n"
}, {
  "number" : 96,
  "answers" : [ {
    "key" : "A",
    "text" : " Point p = new Point();\n"
  }, {
    "key" : "B",
    "text" : " Line.Point p = new Line.Point();\n"
  }, {
    "key" : "C",
    "text" : " The Point class cannot be instatiated at line 15.\n"
  }, {
    "key" : "D",
    "text" : " Line l = new Line() ; l.Point p = new l.Point();\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n10. class Line {\n11. public static class Point {}\n12. }\n13.\n14. class Triangle {\n15. // insert code here\n16. }\nWhich code, inserted at line 15, creates an instance of the Point class defined in Line?\n"
}, {
  "number" : 97,
  "answers" : [ {
    "key" : "A",
    "text" : " final\n"
  }, {
    "key" : "B",
    "text" : " static\n"
  }, {
    "key" : "C",
    "text" : " native\n"
  }, {
    "key" : "D",
    "text" : " public\n"
  }, {
    "key" : "E",
    "text" : " private\n"
  }, {
    "key" : "F",
    "text" : " abstract\n"
  }, {
    "key" : "G",
    "text" : " protected\n"
  } ],
  "sucessAnswers" : [ "A", "B", "D" ],
  "text" : "Given\n11. public interface Status {\n12. /* insert code here */ int MY_VALUE = 10;\n13. }\nWhich three are valid on line 12? (Choose three.)\n"
}, {
  "number" : 98,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation of class A fails.\n"
  }, {
    "key" : "B",
    "text" : " Line 28 prints the value 3 to System.out.\n"
  }, {
    "key" : "C",
    "text" : " Line 28 prints the value 1 to System.out.\n"
  }, {
    "key" : "D",
    "text" : " A runtime error occurs when line 25 executes.\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails because of an error on line 28.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Click the Exhibit button.\nGiven this code from Class B:\n25. A a1 = new A();\n26. A a2 = new A();\n27. A a3 = new A();\n28. System.out.println(A.getInstanceCount());\nWhat is the result?\n"
}, {
  "number" : 99,
  "answers" : [ {
    "key" : "A",
    "text" : " process(bytes);\n"
  }, {
    "key" : "B",
    "text" : " BitUtils.process(bytes);\n"
  }, {
    "key" : "C",
    "text" : " util.BitUtils.process(bytes);\n"
  }, {
    "key" : "D",
    "text" : " SomeApp cannot use methods in BitUtils.\n"
  }, {
    "key" : "E",
    "text" : " import util.BitUtils.*; process(bytes);\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given classes defined in two different files:\n1. package util;\n2. public class BitUtils {\n3. public static void process(byte[] b) { /* more code here */ }\n4. }\n1. package app;\n2. public class SomeApp {\n3. public static void main(String[] args) {\n4. byte[] bytes = new byte[256];\n5. // insert code here\n6. }\n7. }\nWhat is required at line 5 in class SomeApp to use the process method of BitUtils?\n"
}, {
  "number" : 100,
  "answers" : [ {
    "key" : "A",
    "text" : " n = 100;\n"
  }, {
    "key" : "B",
    "text" : " i.setX( 100 );\n"
  }, {
    "key" : "C",
    "text" : " o.getY().setX( 100 );\n"
  }, {
    "key" : "D",
    "text" : " i = new Inner(); i.setX( 100 );\n"
  }, {
    "key" : "E",
    "text" : " o.setY( i ); i = new Inner(); i.setX( 100 );\n"
  }, {
    "key" : "F",
    "text" : " i = new Inner(); i.setX( 100 ); o.setY( i );\n"
  } ],
  "sucessAnswers" : [ "B", "C", "F" ],
  "text" : "Click the Exhibit button.\nWhich three code fragments, added individually at line 29, produce the output 100?\n(Choose three.)\n"
}, {
  "number" : 101,
  "answers" : [ {
    "key" : "A",
    "text" : " Jar A\n"
  }, {
    "key" : "B",
    "text" : " Jar B\n"
  }, {
    "key" : "C",
    "text" : " Jar C\n"
  }, {
    "key" : "D",
    "text" : " Jar D\n"
  }, {
    "key" : "E",
    "text" : " Jar E\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Click the Exhibit button.\nGiven the fully-qualified class names:\ncom.foo.bar.Dog\ncom.foo.bar.blatz.Book\ncom.bar.Car\ncom.bar.blatz.Sun\nWhich graph represents the correct directory structure for a JAR file from which those\nclasses can be used by the compiler and JVM?\n"
}, {
  "number" : 102,
  "answers" : [ {
    "key" : "A",
    "text" : " A class's finalize() method CANNOT be invoked explicitly.\n"
  }, {
    "key" : "B",
    "text" : " super.finalize() is called implicitly by any overriding finalize() method.\n"
  }, {
    "key" : "C",
    "text" : " The finalize() method for a given object is called no more than once by the garbage\ncollector.\n"
  }, {
    "key" : "D",
    "text" : " The order in which finalize() is called on two objects is based on the order in which\nthe two objects became finalizable.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Which statement is true?\n"
}, {
  "number" : 103,
  "answers" : [ {
    "key" : "A",
    "text" : " None of these objects are eligible for garbage collection.\n"
  }, {
    "key" : "B",
    "text" : " Only the object referenced by booch is eligible for garbage collection.\n"
  }, {
    "key" : "C",
    "text" : " Only the object referenced by snoog is eligible for garbage collection.\n"
  }, {
    "key" : "D",
    "text" : " Only the object referenced by snooch is eligible for garbage collection.\n"
  }, {
    "key" : "E",
    "text" : " The objects referenced by snooch and booch are eligible for garbage collection.\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\n11. class Snoochy {\n12. Boochy booch;\n13. public Snoochy() { booch = new Boochy(this); }\n14. }\n15.\n16. class Boochy {\n17. Snoochy snooch;\n18. public Boochy(Snoochy s) { snooch = s; }\n19. }\nAnd the statements:\n21. public static void main(String[] args) {\n22. Snoochy snoog = new Snoochy();\n23. snoog = null;\n24. // more code here\n25. }\nWhich statement is true about the objects referenced by snoog, snooch, and booch\nimmediately after line 23 executes?\n"
}, {
  "number" : 104,
  "answers" : [ {
    "key" : "A",
    "text" : " 0\n"
  }, {
    "key" : "B",
    "text" : " 1\n"
  }, {
    "key" : "C",
    "text" : " 2\n"
  }, {
    "key" : "D",
    "text" : " 3\n"
  }, {
    "key" : "E",
    "text" : " 4\n"
  }, {
    "key" : "F",
    "text" : " 6\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\n3. interface Animal { void makeNoise(); }\n4. class Horse implements Animal {\n5. Long weight = 1200L;\n6. public void makeNoise() { System.out.println(\"whinny\"); }\n7. }\n8. public class Icelandic extends Horse {\n9. public void makeNoise() { System.out.println(\"vinny\"); }\n10. public static void main(String[] args) {\n11. Icelandic i1 = new Icelandic();\n12. Icelandic i2 = new Icelandic();\n13. Icelandic i3 = new Icelandic();\n14. i3 = i1; i1 = i2; i2 = null; i3 = i1;\n15. }\n16. }\nWhen line 15 is reached, how many objects are eligible for the garbage collector?\n"
}, {
  "number" : 105,
  "answers" : [ {
    "key" : "A",
    "text" : " p.setWeight(420);\n"
  }, {
    "key" : "B",
    "text" : " p.changePayload(420);\n"
  }, {
    "key" : "C",
    "text" : " p = new Payload(420);\n"
  }, {
    "key" : "D",
    "text" : " Payload.setWeight(420);\n"
  }, {
    "key" : "E",
    "text" : " p = Payload.setWeight(420);\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n5. class Payload {\n6. private int weight;\n7. public Payload (int w) { weight = w; }\n8. public void setWeight(int w) { weight = w; }\n9. public String toString() { return Integer.toString(weight); }\n10. }\n11. public class TestPayload {\n12. static void changePayload(Payload p) { /* insert code */ }\n13. public static void main(String[] args) {\n14. Payload p = new Payload(200);\n15. p.setWeight(1024);\n16. changePayload(p);\n17. System.out.println(\"p is \" + p);\n18. } }\nWhich code fragment, inserted at the end of line 12, produces the output p is 420?\n"
}, {
  "number" : 106,
  "answers" : [ {
    "key" : "A",
    "text" : " r, t, t,\n"
  }, {
    "key" : "B",
    "text" : " r, e, o,\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "D",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given:\n11. public static void test(String str) {\n12. int check = 4;\n13. if (check = str.length()) {\n14. System.out.print(str.charAt(check -= 1) +\", \");\n15. } else {\n16. System.out.print(str.charAt(0) + \", \");\n17. }\n18. }\nand the invocation:\n21. test(\"four\");\n22. test(\"tee\");\n23. test(\"to\");\nWhat is the result?\n"
}, {
  "number" : 107,
  "answers" : [ {
    "key" : "A",
    "text" : " /test/Chess.class\n"
  }, {
    "key" : "B",
    "text" : " /home/bob/Chess.class\n"
  }, {
    "key" : "C",
    "text" : " /test/games/Chess.class\n"
  }, {
    "key" : "D",
    "text" : " /usr/lib/games/Chess.class\n"
  }, {
    "key" : "E",
    "text" : " /home/bob/games/Chess.class\n"
  }, {
    "key" : "F",
    "text" : " inside jarfile /opt/java/lib/Games.jar (with a correct manifest)\n"
  }, {
    "key" : "G",
    "text" : " inside jarfile /home/bob/downloads/Games.jar (with a correct manifest)\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : " A UNIX user named Bob wants to replace his chess program with a new one, but he is\nnot sure where the old one is installed. Bob is currently able to run a Java chess program\nstarting from his home directory /home/bob using the command:\njava -classpath /test:/home/bob/downloads/*.jar games.\nChess Bob's CLASSPATH is set (at login time) to:\n/usr/lib:/home/bob/classes:/opt/java/lib:/opt/java/lib/*.jar\nWhat is a possible location for the Chess.class file?\n"
}, {
  "number" : 108,
  "answers" : [ {
    "key" : "A",
    "text" : " process(bytes);\n"
  }, {
    "key" : "B",
    "text" : " BitUtils.process(bytes);\n"
  }, {
    "key" : "C",
    "text" : " app.BitUtils.process(bytes);\n"
  }, {
    "key" : "D",
    "text" : " util.BitUtils.process(bytes);\n"
  }, {
    "key" : "E",
    "text" : " import util.BitUtils.*; process(bytes);\n"
  }, {
    "key" : "F",
    "text" : " SomeApp cannot use the process method in BitUtils.\n"
  } ],
  "sucessAnswers" : [ "F" ],
  "text" : "Given classes defined in two different files:\n1. package util;\n2. public class BitUtils {\n3. private static void process(byte[] b) {}\n4. }\n1. package app;\n2. public class SomeApp {\n3. public static void main(String[] args) {\n4. byte[] bytes = new byte[256];\n5. // insert code here\n6. }\n7. }\nWhat is required at line 5 in class SomeApp to use the process method of BitUtils?\n"
}, {
  "number" : 109,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "C",
    "text" : " doStuff x = 6 main x = 6\n"
  }, {
    "key" : "D",
    "text" : " doStuff x = 6 main x = 7\n"
  }, {
    "key" : "E",
    "text" : " doStuff x = 7 main x = 6\n"
  }, {
    "key" : "F",
    "text" : " doStuff x = 7 main x = 7\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n15. public class Pass2 {\n16. public void main(String [] args) {\n17. int x = 6;\n18. Pass2 p = new Pass2();\n19. p.doStuff(x);\n20. System.out.print(\" main x = \" + x);\n21. }\n22.\n23. void doStuff(int x) {\n24. System.out.print(\" doStuff x = \" + x++);\n25. }\n26. }\nAnd the command-line invocations:\njavac Pass2.java\njava Pass2 5\nWhat is the result?\n"
}, {
  "number" : 110,
  "answers" : [ {
    "key" : "A",
    "text" : " collie\n"
  }, {
    "key" : "B",
    "text" : " harrier\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "D",
    "text" : " collie harrier\n"
  }, {
    "key" : "E",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n12. public class Test {\n13. public enum Dogs {collie, harrier};\n14. public static void main(String [] args) {\n15. Dogs myDog = Dogs.collie;\n16. switch (myDog) {\n17. case collie:\n18. System.out.print(\"collie \");\n19. case harrier:\n20. System.out.print(\"harrier \");\n21. }\n22. }\n23. }\nWhat is the result?\n"
}, {
  "number" : 111,
  "answers" : [ {
    "key" : "A",
    "text" : " no output\n"
  }, {
    "key" : "B",
    "text" : " no output\nassert is on\n"
  }, {
    "key" : "C",
    "text" : " assert is on\n"
  }, {
    "key" : "D",
    "text" : " no output\nAn AssertionError is thrown.\n"
  }, {
    "key" : "E",
    "text" : " assert is on\nAn AssertionError is thrown.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n1. public class Donkey {\n2. public static void main(String[] args) {\n3. boolean assertsOn = false;\n4. assert (assertsOn) : assertsOn = true;\n5. if(assertsOn) {\n6. System.out.println(\"assert is on\");\n7. }\n8. }\n9. }\nIf class Donkey is invoked twice, the first time without assertions enabled, and the second\ntime with assertions enabled, what are the results?\n"
}, {
  "number" : 112,
  "answers" : [ {
    "key" : "A",
    "text" : " null\n"
  }, {
    "key" : "B",
    "text" : " finally\n"
  }, {
    "key" : "C",
    "text" : " null finally\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "E",
    "text" : " finally exception\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\n11. static void test() {\n12. try {\n13. String x = null;\n14. System.out.print(x.toString() + \" \");\n15. }\n16. finally { System.out.print(\"finally \"); }\n17. }\n18. public static void main(String[] args) {\n19. try { test(); }\n20. catch (Exception ex) { System.out.print(\"exception \"); }\n21. }\nWhat is the result?\n"
}, {
  "number" : 113,
  "answers" : [ {
    "key" : "A",
    "text" : " end\n"
  }, {
    "key" : "B",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "C",
    "text" : " exception end\n"
  }, {
    "key" : "D",
    "text" : " exception test end\n"
  }, {
    "key" : "E",
    "text" : " A Throwable is thrown by main.\n"
  }, {
    "key" : "F",
    "text" : " An Exception is thrown by main.\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\n11. static void test() throws Error {\n12. if (true) throw new AssertionError();\n13. System.out.print(\"test \");\n14. }\n15. public static void main(String[] args) {\n16. try { test(); }\n17. catch (Exception ex) { System.out.print(\"exception \"); }\n18. System.out.print(\"end \");\n19. }\nWhat is the result?\n"
}, {
  "number" : 114,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation succeeds.\n"
  }, {
    "key" : "B",
    "text" : " Class A does not compile.\n"
  }, {
    "key" : "C",
    "text" : " The method declared on line 9 cannot be modified to throw TestException.\n"
  }, {
    "key" : "D",
    "text" : " TestA compiles if line 10 is enclosed in a try/catch block that catches TestException.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n1. class TestException extends Exception { }\n2. class A {\n3. public String sayHello(String name) throws TestException {\n4. if(name == null) throw new TestException();\n5. return \"Hello \" + name;\n6. }\n7. }\n8. public class TestA {\n9. public static void main(String[] args) {\n10. new A().sayHello(\"Aiko\");\n11. }\n12. }\nWhich statement is true?\n"
}, {
  "number" : 115,
  "answers" : [ {
    "key" : "A",
    "text" : " A, B, C,\n"
  }, {
    "key" : "B",
    "text" : " B, C, A,\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "D",
    "text" : " The code runs with no output.\n"
  }, {
    "key" : "E",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n11. public static Collection get() {\n12. Collection sorted = new LinkedList();\n13. sorted.add(\"B\"); sorted.add(\"C\"); sorted.add(\"A\");\n14. return sorted;\n15. }\n16. public static void main(String[] args) {\n17. for (Object obj: get()) {\n18. System.out.print(obj + \", \");\n19. }\n20. }\nWhat is the result?\n"
}, {
  "number" : 116,
  "answers" : [ {
    "key" : "A",
    "text" : " B\n"
  }, {
    "key" : "B",
    "text" : " The code runs with no output.\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails because of an error in line 12.\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails because of an error in line 15.\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails because of an error in line 18.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n11. static class A {\n12. void process() throws Exception { throw new Exception(); }\n13. }\n14. static class B extends A {\n15. void process() { System.out.println(\"B\"); }\n16. }\n17. public static void main(String[] args) {\n18. new B().process();\n19. }\nWhat is the result?\n"
}, {
  "number" : 117,
  "answers" : [ {
    "key" : "A",
    "text" : " java.lang.StackOverflowError\n"
  }, {
    "key" : "B",
    "text" : " java.lang.IllegalStateException\n"
  }, {
    "key" : "C",
    "text" : " java.lang.ExceptionInInitializerError\n"
  }, {
    "key" : "D",
    "text" : " java.lang.ArrayIndexOutOfBoundsException\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given:\n10. public class Foo {\n11. static int[] a;\n12. static { a[0]=2; }\n13. public static void main( String[] args ) {}\n14. }\nWhich exception or error will be thrown when a programmer attempts to run this code?\n"
}, {
  "number" : 118,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " ClassC is displayed.\n"
  }, {
    "key" : "C",
    "text" : " The code runs with no output.\n"
  }, {
    "key" : "D",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Click the Exhibit button.\nGiven: ClassA a = new ClassA();\na.methodA();\nWhat is the result?\n"
}, {
  "number" : 119,
  "answers" : [ {
    "key" : "A",
    "text" : " three\n"
  }, {
    "key" : "B",
    "text" : " other\n"
  }, {
    "key" : "C",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails because of an error on line 12.\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails because of an error on line 13.\n"
  }, {
    "key" : "F",
    "text" : " Compilation fails because of an error on line 15.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n11. public static void main(String[] args) {\n12. Integer i = new Integer(1) + new Integer(2);\n13. switch(i) {\n14. case 3: System.out.println(\"three\"); break;\n15. default: System.out.println(\"other\"); break;\n16. }\n17. }\nWhat is the result?\n"
}, {
  "number" : 120,
  "answers" : [ {
    "key" : "A",
    "text" : " 3, 2, 1,\n"
  }, {
    "key" : "B",
    "text" : " 1, 2, 3,\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "D",
    "text" : " The code runs with no output.\n"
  }, {
    "key" : "E",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given:\n11. public static Iterator reverse(List list) {\n12. Collections.reverse(list);\n13. return list.iterator();\n14. }\n15. public static void main(String[] args) {\n16. List list = new ArrayList();\n17. list.add(\"1\"); list.add(\"2\"); list.add(\"3\");\n18. for (Object obj: reverse(list))\n19. System.out.print(obj + \", \");\n20. }\nWhat is the result?\n"
}, {
  "number" : 121,
  "answers" : [ {
    "key" : "A",
    "text" : " String s = \"123456789\";\ns = (s-\"123\").replace(1,3,\"24\") - \"89\";\n"
  }, {
    "key" : "B",
    "text" : " StringBuffer s = new StringBuffer(\"123456789\");\ns.delete(0,3).replace(1,3,\"24\").delete(4,6);\n"
  }, {
    "key" : "C",
    "text" : " StringBuffer s = new StringBuffer(\"123456789\");\ns.substring(3,6).delete(1,3).insert(1, \"24\");\n"
  }, {
    "key" : "D",
    "text" : " StringBuilder s = new StringBuilder(\"123456789\");\ns.substring(3,6).delete(1,2).insert(1, \"24\");\n"
  }, {
    "key" : "E",
    "text" : " StringBuilder s = new StringBuilder(\"123456789\");\ns.delete(0,3).delete(1,3).delete(2,5).insert(1, \"24\");\n"
  } ],
  "sucessAnswers" : [ "B", "E" ],
  "text" : "Given:\n1. public class TestString3 {\n2. public static void main(String[] args) {\n3. // insert code here\n5. System.out.println(s);\n6. }\n7. }\nWhich two code fragments, inserted independently at line 3, generate the output 4247?\n(Choose two.)\n"
}, {
  "number" : 122,
  "answers" : [ {
    "key" : "A",
    "text" : " Locale loc = Locale.getLocale();\nSystem.out.println(loc.getDisplayCountry()\n+ \" \" + df.format(d));\n"
  }, {
    "key" : "B",
    "text" : " Locale loc = Locale.getDefault();\nSystem.out.println(loc.getDisplayCountry()\n+ \" \" + df.format(d));\n"
  }, {
    "key" : "C",
    "text" : " Locale loc = Locale.getLocale();\nSystem.out.println(loc.getDisplayCountry()\n+ \" \" + df.setDateFormat(d));\n"
  }, {
    "key" : "D",
    "text" : " Locale loc = Locale.getDefault();\nSystem.out.println(loc.getDisplayCountry()\n+ \" \" + df.setDateFormat(d));\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n1. d is a valid, non-null Date object\n2. df is a valid, non-null DateFormat object set to the current locale\nWhat outputs the current locale's country name and the appropriate version of d's date?\n"
}, {
  "number" : 123,
  "answers" : [ {
    "key" : "A",
    "text" : " df = new DateFormat();\n"
  }, {
    "key" : "B",
    "text" : " df = Date.getFormat();\n"
  }, {
    "key" : "C",
    "text" : " df = date.getFormat();\n"
  }, {
    "key" : "D",
    "text" : " df = DateFormat.getFormat();\n"
  }, {
    "key" : "E",
    "text" : " df = DateFormat.getInstance();\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\n5. import java.util.Date;\n6. import java.text.DateFormat;\n21. DateFormat df;\n22. Date date = new Date();\n23. // insert code here\n24. String s = df.format(date);\nWhich code fragment, inserted at line 23, allows the code to compile?\n"
}, {
  "number" : 124,
  "answers" : [ {
    "key" : "A",
    "text" : " 7\n"
  }, {
    "key" : "B",
    "text" : " 49\n"
  }, {
    "key" : "C",
    "text" : " 343\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "E",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n1. public class BuildStuff {\n2. public static void main(String[] args) {\n3. Boolean test = new Boolean(true);\n4. Integer x = 343;\n5. Integer y = new BuildStuff().go(test, x);\n6. System.out.println(y);\n7. }\n8. int go(Boolean b, int i) {\n9. if(b) return (i/7);\n10. return (i/49);\n11. }\n12. }\nWhat is the result?\n"
}, {
  "number" : 125,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "C",
    "text" : " An instance of Forest is serialized.\n"
  }, {
    "key" : "D",
    "text" : " An instance of Forest and an instance of Tree are both serialized.\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n12. import java.io.*;\n13. public class Forest implements Serializable {\n14. private Tree tree = new Tree();\n15. public static void main(String [] args) {\n16. Forest f = new Forest();\n17. try {\n18. FileOutputStream fs = new FileOutputStream(\"Forest.ser\");\n19. ObjectOutputStream os = new ObjectOutputStream(fs);\n20. os.writeObject(f); os.close();\n21. } catch (Exception ex) { ex.printStackTrace(); }\n22. } }\n23.\n24. class Tree { }\nWhat is the result?\n"
}, {
  "number" : 126,
  "answers" : [ {
    "key" : "A",
    "text" : " Closing an open stream.\n"
  }, {
    "key" : "B",
    "text" : " Flushing an open stream.\n"
  }, {
    "key" : "C",
    "text" : " Writing to an open stream.\n"
  }, {
    "key" : "D",
    "text" : " Writing a line separator to an open stream.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Which capability exists only in java.io.FileWriter?\n"
}, {
  "number" : 127,
  "answers" : [ {
    "key" : "A",
    "text" : " password:\ngot\n"
  }, {
    "key" : "B",
    "text" : " password:\ngot aiko\n"
  }, {
    "key" : "C",
    "text" : " password: aiko\ngot aiko\n"
  }, {
    "key" : "D",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails due to an error on line 8.\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\n5. import java.io.*;\n6. public class Talk {\n7. public static void main(String[] args) {\n8. Console c = new Console();\n9. String pw;\n10. System.out.print(\"password: \");\n11. pw = c.readLine();\n12. System.out.println(\"got \" + pw);\n13. }\n14. }\nIf the user types the password aiko when prompted, what is the result?\n"
}, {
  "number" : 128,
  "answers" : [ {
    "key" : "A",
    "text" : " System.out.printf(\"|%7d| \\n\", d);\n"
  }, {
    "key" : "B",
    "text" : " System.out.printf(\"|%7f| \\n\", d);\n"
  }, {
    "key" : "C",
    "text" : " System.out.printf(\"|%3.7d| \\n\", d);\n"
  }, {
    "key" : "D",
    "text" : " System.out.printf(\"|%3.7f| \\n\", d);\n"
  }, {
    "key" : "E",
    "text" : " System.out.printf(\"|%7.3d| \\n\", d);\n"
  }, {
    "key" : "F",
    "text" : " System.out.printf(\"|%7.3f| \\n\", d);\n"
  } ],
  "sucessAnswers" : [ "F" ],
  "text" : "Given:\n1. public class LineUp {\n2. public static void main(String[] args) {\n3. double d = 12.345;\n4. // insert code here\n5. }\n6. }\nWhich code fragment, inserted at line 4, produces the output | 12.345|?\n"
}, {
  "number" : 129,
  "answers" : [ {
    "key" : "A",
    "text" : " String regex = \"\";\n"
  }, {
    "key" : "B",
    "text" : " String regex = \" \";\n"
  }, {
    "key" : "C",
    "text" : " String regex = \".*\";\n"
  }, {
    "key" : "D",
    "text" : " String regex = \"\\\\s\";\n"
  }, {
    "key" : "E",
    "text" : " String regex = \"\\\\.\\\\s*\";\n"
  }, {
    "key" : "F",
    "text" : " String regex = \"\\\\w[ \\.] +\";\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\n11. String test = \"Test A. Test B. Test C.\";\n12. // insert code here\n13. String[] result = test.split(regex);\nWhich regular expression, inserted at line 12, correctly splits test into \"Test A\", \"Test B\",\nand \"Test C\"?\n"
}, {
  "number" : 130,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails because of an error in line 3.\n"
  }, {
    "key" : "B",
    "text" : " Compilation fails because of an error in line 7.\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails because of an error in line 9.\n"
  }, {
    "key" : "D",
    "text" : " If you define D e = new E(), then e.bMethod() invokes the version of bMethod()\ndefined in Line 5.\n"
  }, {
    "key" : "E",
    "text" : " If you define D e = (D)(new E()), then e.bMethod() invokes the version of bMethod()\ndefined in Line 5.\n"
  }, {
    "key" : "F",
    "text" : " If you define D e = (D)(new E()), then e.bMethod() invokes the version of bMethod()\ndefined in Line 9.\n"
  } ],
  "sucessAnswers" : [ "F" ],
  "text" : "Given:\n1. interface A { public void aMethod(); }\n2. interface B { public void bMethod(); }\n3. interface C extends A,B { public void cMethod(); }\n4. class D implements B {\n5. public void bMethod(){}\n6. }\n7. class E extends D implements C {\n8. public void aMethod(){}\n9. public void bMethod(){}\n10. public void cMethod(){}\n11. }\nWhat is the result?\n"
}, {
  "number" : 131,
  "answers" : [ {
    "key" : "A",
    "text" : " Value is: 8\n"
  }, {
    "key" : "B",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "C",
    "text" : " Value is: 12\n"
  }, {
    "key" : "D",
    "text" : " Value is: -12\n"
  }, {
    "key" : "E",
    "text" : " The code runs with no output.\n"
  }, {
    "key" : "F",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Click the Exhibit button.\nWhat is the result?\n"
}, {
  "number" : 132,
  "answers" : [ {
    "key" : "A",
    "text" : " foofoofoofoofoo\n"
  }, {
    "key" : "B",
    "text" : " foobarfoobarbar\n"
  }, {
    "key" : "C",
    "text" : " foobarfoofoofoo\n"
  }, {
    "key" : "D",
    "text" : " foobarfoobarfoo\n"
  }, {
    "key" : "E",
    "text" : " barbarbarbarbar\n"
  }, {
    "key" : "F",
    "text" : " foofoofoobarbar\n"
  }, {
    "key" : "G",
    "text" : " foofoofoobarfoo\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n1. public class Base {\n2. public static final String FOO = \"foo\";\n3. public static void main(String[] args) {\n4. Base b = new Base();\n5. Sub s = new Sub();\n6. System.out.print(Base.FOO);\n7. System.out.print(Sub.FOO);\n8. System.out.print(b.FOO);\n9. System.out.print(s.FOO);\n10. System.out.print(((Base)s).FOO);\n11. } }\n12. class Sub extends Base {public static final String FOO=\"bar\";}\nWhat is the result?\n"
}, {
  "number" : 133,
  "answers" : [ {
    "key" : "A",
    "text" : " Raccoon is-a Mammal.\n"
  }, {
    "key" : "B",
    "text" : " Raccoon has-a Mammal.\n"
  }, {
    "key" : "C",
    "text" : " BabyRaccoon is-a Mammal.\n"
  }, {
    "key" : "D",
    "text" : " BabyRaccoon is-a Raccoon.\n"
  }, {
    "key" : "E",
    "text" : " BabyRaccoon has-a Mammal.\n"
  }, {
    "key" : "F",
    "text" : " BabyRaccoon is-a BabyRaccoon.\n"
  } ],
  "sucessAnswers" : [ "A", "B", "C", "F" ],
  "text" : "Given:\n11. class Mammal { }\n12.\n13. class Raccoon extends Mammal {\n14. Mammal m = new Mammal();\n15. }\n16.\n17. class BabyRaccoon extends Mammal { }\nWhich four statements are true? (Choose four.)\n"
}, {
  "number" : 134,
  "answers" : [ {
    "key" : "A",
    "text" : " The code runs with no output.\n"
  }, {
    "key" : "B",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails because of an error in line 20.\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails because of an error in line 21.\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails because of an error in line 23.\n"
  }, {
    "key" : "F",
    "text" : " Compilation fails because of an error in line 25.\n"
  } ],
  "sucessAnswers" : [ "F" ],
  "text" : "Given:\n10. interface A { void x(); }\n11. class B implements A { public void x() {} public void y() {} }\n12. class C extends B { public void x() {} }\nAnd:\n20. java.util.List<A> list = new java.util.ArrayList<A>();\n21. list.add(new B());\n22. list.add(new C());\n23. for (A a : list) {\n24. a.x();\n25. a.y();\n26. }\nWhat is the result?\n"
}, {
  "number" : 135,
  "answers" : [ {
    "key" : "A",
    "text" : " public void m1() { }\n"
  }, {
    "key" : "B",
    "text" : " protected void m1() { }\n"
  }, {
    "key" : "C",
    "text" : " private void m1() { }\n"
  }, {
    "key" : "D",
    "text" : " void m2() { }\n"
  }, {
    "key" : "E",
    "text" : " public void m2() { }\n"
  }, {
    "key" : "F",
    "text" : " protected void m2() { }\n"
  }, {
    "key" : "G",
    "text" : " private void m2() { }\n"
  } ],
  "sucessAnswers" : [ "A", "B", "E", "F" ],
  "text" : "Given:\n2. public class Hi {\n3. void m1() { }\n4. protected void() m2 { }\n5. }\n6. class Lois extends Hi {\n7. // insert code here\n8. }\nWhich four code fragments, inserted independently at line 7, will compile? (Choose\nfour.)\n"
}, {
  "number" : 136,
  "answers" : [ {
    "key" : "A",
    "text" : " Has-a relationships should never be encapsulated.\n"
  }, {
    "key" : "B",
    "text" : " Has-a relationships should be implemented using inheritance.\n"
  }, {
    "key" : "C",
    "text" : " Has-a relationships can be implemented using instance variables.\n"
  }, {
    "key" : "D",
    "text" : " Is-a relationships can be implemented using the extends keyword.\n"
  }, {
    "key" : "E",
    "text" : " Is-a relationships can be implemented using the implements keyword.\n"
  }, {
    "key" : "F",
    "text" : " The relationship between Movie and Actress is an example of an is-a relationship.\n"
  }, {
    "key" : "G",
    "text" : " An array or a collection can be used to implement a one-to-many has-a relationship.\n"
  } ],
  "sucessAnswers" : [ "C", "D", "E", "G" ],
  "text" : "Which four statements are true? (Choose four.)\n"
}, {
  "number" : 137,
  "answers" : [ {
    "key" : "A",
    "text" : " Hello\n"
  }, {
    "key" : "B",
    "text" : " Hello World\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "D",
    "text" : " Hello World 5\n"
  }, {
    "key" : "E",
    "text" : " The code runs with no output.\n"
  }, {
    "key" : "F",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given:\n10: public class Hello {\n11: String title;\n12: int value;\n13: public Hello() {\n14: title += \" World\";\n15: }\n16: public Hello(int value) {\n17: this.value = value;\n18: title = \"Hello\";\n19: Hello();\n20: }\n21: }\nand:\n30: Hello c = new Hello(5);\n31: System.out.println(c.title);\nWhat is the result?\n"
}, {
  "number" : 138,
  "answers" : [ {
    "key" : "A",
    "text" : " It can be any class.\n"
  }, {
    "key" : "B",
    "text" : " No class has access to base.\n"
  }, {
    "key" : "C",
    "text" : " The class must belong to the geometry package.\n"
  }, {
    "key" : "D",
    "text" : " The class must be a subclass of the class Hypotenuse.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given:\n1. package geometry;\n2. public class Hypotenuse {\n3. public InnerTriangle it = new InnerTriangle();\n4. class InnerTriangle {\n5. public int base;\n6. public int height;\n7. }\n8. }\nWhich statement is true about the class of an object that can reference the variable base?\n"
}, {
  "number" : 139,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation of class A fails.\n"
  }, {
    "key" : "B",
    "text" : " Line 28 prints the value 3 to System.out.\n"
  }, {
    "key" : "C",
    "text" : " Line 28 prints the value 1 to System.out.\n"
  }, {
    "key" : "D",
    "text" : " A runtime error occurs when line 25 executes.\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails because of an error on line 28.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Click the Exhibit button.\nGiven this code from Class B:\n25. A a1 = new A();\n26. A a2 = new A();\n27. A a3 = new A();\n28. System.out.println(A.getInstanceCount());\nWhat is the result?\n"
}, {
  "number" : 140,
  "answers" : [ {
    "key" : "A",
    "text" : " public class Employee extends Info implements Data {\npublic void load() { /*do something*/ }\n}\n"
  }, {
    "key" : "B",
    "text" : " public class Employee implements Info extends Data {\npublic void load() { /*do something*/ }\n}\n"
  }, {
    "key" : "C",
    "text" : " public class Employee extends Info implements Data\npublic void load(){ /*do something*/ }\npublic void Info.load(){ /*do something*/ }\n}\n"
  }, {
    "key" : "D",
    "text" : " public class Employee implements Info extends Data {\npublic void Data.load(){ /*do something*/ }\npublic void load(){ /*do something*/ }\n}\n"
  }, {
    "key" : "E",
    "text" : " public class Employee implements Info extends Data {\npublic void load(){ /*do something*/ }\npublic void Info.load(){ /*do something*/ }\n}\n"
  }, {
    "key" : "F",
    "text" : " public class Employee extends Info implements Data{\npublic void Data.load() { /*do something*/ }\npublic void Info.load() { /*do something*/ }\n}\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n10. interface Data { public void load(); }\n11. abstract class Info { public abstract void load(); }\nWhich class correctly uses the Data interface and Info class?\n"
}, {
  "number" : 141,
  "answers" : [ {
    "key" : "A",
    "text" : " 2\n"
  }, {
    "key" : "B",
    "text" : " 3\n"
  }, {
    "key" : "C",
    "text" : " 4\n"
  }, {
    "key" : "D",
    "text" : " 6\n"
  }, {
    "key" : "E",
    "text" : " 7\n"
  }, {
    "key" : "F",
    "text" : " Compilation fails.\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\n1. class Alligator {\n2. public static void main(String[] args) {\n3. int []x[] = {{1,2}, {3,4,5}, {6,7,8,9}};\n4. int [][]y = x;\n5. System.out.println(y[2][1]);\n6. }\n7. }\nWhat is the result?\n"
}, {
  "number" : 142,
  "answers" : [ {
    "key" : "A",
    "text" : " 3\n"
  }, {
    "key" : "B",
    "text" : " 23\n"
  }, {
    "key" : "C",
    "text" : " 32\n"
  }, {
    "key" : "D",
    "text" : " 123\n"
  }, {
    "key" : "E",
    "text" : " 321\n"
  }, {
    "key" : "F",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "G",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n21. abstract class C1 {\n22. public C1() { System.out.print(1); }\n23. }\n24. class C2 extends C1 {\n25. public C2() { System.out.print(2); }\n26. }\n27. class C3 extends C2 {\n28. public C3() { System.out.println(3); }\n29. }\n30. public class Ctest {\n31. public static void main(String[] a) { new C3(); }\n32. }\nWhat is the result?\n"
}, {
  "number" : 143,
  "answers" : [ {
    "key" : "A",
    "text" : " public void foo() {}\n"
  }, {
    "key" : "B",
    "text" : " public int foo() { return 3; }\n"
  }, {
    "key" : "C",
    "text" : " public Two foo() { return this; }\n"
  }, {
    "key" : "D",
    "text" : " public One foo() { return this; }\n"
  }, {
    "key" : "E",
    "text" : " public Object foo() { return this; }\n"
  } ],
  "sucessAnswers" : [ "C", "D" ],
  "text" : "Given:\n10. class One {\n11. public One foo() { return this; }\n12. }\n13. class Two extends One {\n14. public One foo() { return this; }\n15. }\n16. class Three extends Two {\n17. // insert method here\n18. }\nWhich two methods, inserted individually, correctly complete the Three class? (Choose\ntwo.)\n"
}, {
  "number" : 144,
  "answers" : [ {
    "key" : "A",
    "text" : " public class Session\nimplements Runnable, Cloneable {\npublic void run();\npublic Object clone();\n}\n"
  }, {
    "key" : "B",
    "text" : " public class Session\nextends Runnable, Cloneable {\npublic void run() { /* do something */ }\npublic Object clone() { /* make a copy */ }\n"
  }, {
    "key" : "C",
    "text" : " public class Session\nimplements Runnable, Cloneable {\npublic void run() { /* do something */ }\npublic Object clone() { /* make a copy */ }\n"
  }, {
    "key" : "D",
    "text" : " public abstract class Session\nimplements Runnable, Cloneable {\npublic void run() { /* do something */ }\npublic Object clone() { /*make a copy */ }\n"
  }, {
    "key" : "E",
    "text" : " public class Session\nimplements Runnable, implements Cloneable {\npublic void run() { /* do something */ }\npublic Object clone() { /* make a copy */ }\n"
  } ],
  "sucessAnswers" : [ "C", "D" ],
  "text" : "Which two classes correctly implement both the java.lang.Runnable and the java.lang.\nCloneable interfaces? (Choose two.)\n"
}, {
  "number" : 145,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation succeeds.\n"
  }, {
    "key" : "B",
    "text" : " Exactly one class does NOT compile.\n"
  }, {
    "key" : "C",
    "text" : " Exactly two classes do NOT compile.\n"
  }, {
    "key" : "D",
    "text" : " Exactly four classes do NOT compile.\n"
  }, {
    "key" : "E",
    "text" : " Exactly three classes do NOT compile.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given:\n11. public interface A { public void m1(); }\n12.\n13. class B implements A { }\n14. class C implements A { public void m1() { } }\n15. class D implements A { public void m1(int x) { } }\n16. abstract class E implements A { }\n17. abstract class F implements A { public void m1() { } }\n18. abstract class G implements A { public void m1(int x) { } }\nWhat is the result?\n"
}, {
  "number" : 146,
  "answers" : [ {
    "key" : "A",
    "text" : " Point p = Line.getPoint();\n"
  }, {
    "key" : "B",
    "text" : " Line.Point p = Line.getPoint();\n"
  }, {
    "key" : "C",
    "text" : " Point p = (new Line()).getPoint();\n"
  }, {
    "key" : "D",
    "text" : " Line.Point p = (new Line()).getPoint();\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n10. class Line {\n11. public class Point { public int x,y;}\n12. public Point getPoint() { return new Point(); }\n13. }\n14. class Triangle {\n15. public Triangle() {\n16. // insert code here\n17. }\n18. }\nWhich code, inserted at line 16, correctly retrieves a local instance of a Point object?\n"
}, {
  "number" : 147,
  "answers" : [ {
    "key" : "A",
    "text" : " TestA\n"
  }, {
    "key" : "B",
    "text" : " TestB\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "D",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n1. class TestA {\n2. public void start() { System.out.println(\"TestA\"); }\n3. }\n4. public class TestB extends TestA {\n5. public void start() { System.out.println(\"TestB\"); }\n6. public static void main(String[] args) {\n7. ((TestA)new TestB()).start();\n8. }\n9. }\nWhat is the result?\n"
}, {
  "number" : 148,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation will succeed for all classes and interfaces.\n"
  }, {
    "key" : "B",
    "text" : " Compilation of class C will fail because of an error in line 2.\n"
  }, {
    "key" : "C",
    "text" : " Compilation of class C will fail because of an error in line 6.\n"
  }, {
    "key" : "D",
    "text" : " Compilation of class AImpl will fail because of an error in line 2.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Click the Exhibit button.\nWhich statement is true about the classes and interfaces in the exhibit?\n"
}, {
  "number" : 149,
  "answers" : [ {
    "key" : "A",
    "text" : " 1\n"
  }, {
    "key" : "B",
    "text" : " 2\n"
  }, {
    "key" : "C",
    "text" : " 3\n"
  }, {
    "key" : "D",
    "text" : " 4\n"
  }, {
    "key" : "E",
    "text" : " 5\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given the following six method names:\naddListener\naddMouseListener\nsetMouseListener\ndeleteMouseListener\nremoveMouseListener\nregisterMouseListener\nHow many of these method names follow JavaBean Listener naming rules?\n"
}, {
  "number" : 150,
  "answers" : [ {
    "key" : "A",
    "text" : " 1 2 3\n"
  }, {
    "key" : "B",
    "text" : " Compilation fails because of an error in line 12.\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails because of an error in line 13.\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails because of an error in line 14.\n"
  }, {
    "key" : "E",
    "text" : " A ClassCastException is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n11. public static void main(String[] args) {\n12. Object obj = new int[] { 1, 2, 3 };\n13. int[] someArray = (int[])obj;\n14. for (int i : someArray) System.out.print(i + \" \");\n15. }\nWhat is the result?\n"
}, {
  "number" : 151,
  "answers" : [ {
    "key" : "A",
    "text" : " 0, 2, 4, 4, 6, 8, 10, 6,\n"
  }, {
    "key" : "B",
    "text" : " 0, 2, 4, 6, 8, 10, 2, 4,\n"
  }, {
    "key" : "C",
    "text" : " 0, 2, 4, 6, 8, 10, 12, 14,\n"
  }, {
    "key" : "D",
    "text" : " 0, 0, 2, 2, 4, 4, 6, 6, 8, 8, 10, 10, 12, 12, 14, 14,\n"
  }, {
    "key" : "E",
    "text" : " 0, 2, 4, 6, 8, 10, 12, 14, 0, 2, 4, 6, 8, 10, 12, 14,\n"
  } ],
  "sucessAnswers" : [ "A", "C" ],
  "text" : "Click the Exhibit button.\nWhich two are possible results? (Choose two.)\n"
}, {
  "number" : 152,
  "answers" : [ {
    "key" : "A",
    "text" : " foo.notify();\n"
  }, {
    "key" : "B",
    "text" : " bar.notify();\n"
  }, {
    "key" : "C",
    "text" : " foo.notifyAll();\n"
  }, {
    "key" : "D",
    "text" : " Thread.notify();\n"
  }, {
    "key" : "E",
    "text" : " bar.notifyAll();\n"
  }, {
    "key" : "F",
    "text" : " Object.notify();\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\nfoo and bar are public references available to many other threads. foo refers to a Thread\nand bar is an Object. The thread foo is currently executing bar.wait(). From another\nthread, what provides the most reliable way to ensure that foo will stop executing wait()?\n"
}, {
  "number" : 153,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "C",
    "text" : " The code executes and prints \"StartedComplete\".\n"
  }, {
    "key" : "D",
    "text" : " The code executes and prints \"StartedComplete0123\".\n"
  }, {
    "key" : "E",
    "text" : " The code executes and prints \"Started0123Complete\".\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\n1. public class TestOne implements Runnable {\n2. public static void main (String[] args) throws Exception {\n3. Thread t = new Thread(new TestOne());\n4. t.start();\n5. System.out.print(\"Started\");\n6. t.join();\n7. System.out.print(\"Complete\");\n8. }\n9. public void run() {\n10. for (int i = 0; i < 4; i++) {\n11. System.out.print(i);\n12. }\n13. }\n14. }\nWhat can be a result?\n"
}, {
  "number" : 154,
  "answers" : [ {
    "key" : "A",
    "text" : " 4\n"
  }, {
    "key" : "B",
    "text" : " 5\n"
  }, {
    "key" : "C",
    "text" : " 8\n"
  }, {
    "key" : "D",
    "text" : " 9\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "F",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "G",
    "text" : " It is impossible to determine for certain.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Click the Exhibit button.\nWhat is the output if the main() method is run?\n"
}, {
  "number" : 155,
  "answers" : [ {
    "key" : "A",
    "text" : " The output could be 8-1 7-2 8-2 7-1\n"
  }, {
    "key" : "B",
    "text" : " The output could be 7-1 7-2 8-1 6-1\n"
  }, {
    "key" : "C",
    "text" : " The output could be 8-1 7-1 7-2 8-2\n"
  }, {
    "key" : "D",
    "text" : " The output could be 8-1 8-2 7-1 7-2\n"
  } ],
  "sucessAnswers" : [ "C", "D" ],
  "text" : "Given:\n11. public class PingPong implements Runnable {\n12. synchronized void hit(long n) {\n13. for(int i = 1; i < 3; i++)\n14. System.out.print(n + \"-\" + i + \" \");\n15. }\n16. public static void main(String[] args) {\n17. new Thread(new PingPong()).start();\n18. new Thread(new PingPong()).start();\n19. }\n20. public void run() {\n21. hit(Thread.currentThread().getId());\n22. }\n23. }\nWhich two statements are true? (Choose two.)\n"
}, {
  "number" : 156,
  "answers" : [ {
    "key" : "A",
    "text" : " The code will deadlock.\n"
  }, {
    "key" : "B",
    "text" : " The code may run with no output.\n"
  }, {
    "key" : "C",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "D",
    "text" : " The code may run with output \"0 6\".\n"
  }, {
    "key" : "E",
    "text" : " The code may run with output \"2 0 6 4\".\n"
  }, {
    "key" : "F",
    "text" : " The code may run with output \"0 2 4 6\".\n"
  } ],
  "sucessAnswers" : [ "F" ],
  "text" : "Click the Exhibit button.\nWhat is the result?\n"
}, {
  "number" : 157,
  "answers" : [ {
    "key" : "A",
    "text" : " new Thread() {\npublic void run() { doStuff(); }\n};\n"
  }, {
    "key" : "B",
    "text" : " new Thread() {\npublic void start() { doStuff(); }\n};\n"
  }, {
    "key" : "C",
    "text" : " new Thread() {\npublic void start() { doStuff(); }\n}.run();\n"
  }, {
    "key" : "D",
    "text" : " new Thread() {\npublic void run() { doStuff(); }\n}.start();\n"
  }, {
    "key" : "E",
    "text" : " new Thread(new Runnable() {\npublic void run() { doStuff(); }\n}).run();\n"
  }, {
    "key" : "F",
    "text" : " new Thread(new Runnable() {\npublic void run() { doStuff(); }\n}).start();\n"
  } ],
  "sucessAnswers" : [ "D", "F" ],
  "text" : "Which two code fragments will execute the method doStuff() in a separate thread?\n(Choose two.)\n"
}, {
  "number" : 158,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails because the hashCode method is not overridden.\n"
  }, {
    "key" : "B",
    "text" : " A HashSet could contain multiple Person objects with the same name.\n"
  }, {
    "key" : "C",
    "text" : " All Person objects will have the same hash code because the hashCode method is not\noverridden.\n"
  }, {
    "key" : "D",
    "text" : " If a HashSet contains more than one Person object with name=\"Fred\", then removing\nanother Person, also with name=\"Fred\", will remove them all.\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n11. public class Person {\n12. private String name;\n13. public Person(String name) {\n14. this.name = name;\n15. }\n16. public boolean equals(Object o) {\n17. if ( ! ( o instanceof Person) ) return false;\n18. Person p = (Person) o;\n19. return p.name.equals(this.name);\n20. }\n21. }\nWhich statement is true?\n"
}, {
  "number" : 159,
  "answers" : [ {
    "key" : "A",
    "text" : " [1, 2, 3, 5]\n"
  }, {
    "key" : "B",
    "text" : " [2, 1, 3, 5]\n"
  }, {
    "key" : "C",
    "text" : " [2, 5, 3, 1]\n"
  }, {
    "key" : "D",
    "text" : " [5, 3, 2, 1]\n"
  }, {
    "key" : "E",
    "text" : " [1, 3, 5, 2]\n"
  }, {
    "key" : "F",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "G",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given:\n5. import java.util.*;\n6. public class SortOf {\n7. public static void main(String[] args) {\n8. ArrayList<Integer> a = new ArrayList<Integer>();\n9. a.add(1); a.add(5); a.add(3);\n11. Collections.sort(a);\n12. a.add(2);\n13. Collections.reverse(a);\n14. System.out.println(a);\n15. }\n16. }\nWhat is the result?\n"
}, {
  "number" : 160,
  "answers" : [ {
    "key" : "A",
    "text" : " The time to find the value from HashMap with a Person key depends on the size of the\nmap.\n"
  }, {
    "key" : "B",
    "text" : " Deleting a Person key from a HashMap will delete all map entries for all keys of type\nPerson.\n"
  }, {
    "key" : "C",
    "text" : " Inserting a second Person object into a HashSet will cause the first Person object to be\nremoved as a duplicate.\n"
  }, {
    "key" : "D",
    "text" : " The time to determine whether a Person object is contained in a HashSet is constant\nand does NOT depend on the size of the map.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n11. public class Person {\n12. private name;\n13. public Person(String name) {\n14. this.name = name;\n15. }\n16. public int hashCode() {\n17. return 420;\n18. }\n19. }\nWhich statement is true?\n"
}, {
  "number" : 161,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "C",
    "text" : " [608, 610, 612, 629] [608, 610]\n"
  }, {
    "key" : "D",
    "text" : " [608, 610, 612, 629] [608, 610, 629]\n"
  }, {
    "key" : "E",
    "text" : " [606, 608, 610, 612, 629] [608, 610]\n"
  }, {
    "key" : "F",
    "text" : " [606, 608, 610, 612, 629] [608, 610, 629]\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\n12. import java.util.*;\n13. public class Explorer2 {\n14. public static void main(String[] args) {\n15. TreeSet<Integer> s = new TreeSet<Integer>();\n16. TreeSet<Integer> subs = new TreeSet<Integer>();\n17. for(int i = 606; i < 613; i++)\n18. if(i%2 == 0) s.add(i);\n19. subs = (TreeSet)s.subSet(608, true, 611, true);\n20. s.add(629);\n21. System.out.println(s + \" \" + subs);\n22. }\n23. }\nWhat is the result?\n"
}, {
  "number" : 162,
  "answers" : [ {
    "key" : "A",
    "text" : " Tea\n"
  }, {
    "key" : "B",
    "text" : " Coffee\n"
  }, {
    "key" : "C",
    "text" : " Coffee\nTea\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "E",
    "text" : " The code runs with no output.\n"
  }, {
    "key" : "F",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n1. public class Drink implements Comparable {\n2. public String name;\n3. public int compareTo(Object o) {\n4. return 0;\n5. }\n6. }\nand:\n20. Drink one = new Drink();\n21. Drink two = new Drink();\n22. one.name= \"Coffee\";\n23. two.name= \"Tea\";\n24. TreeSet set = new TreeSet();\n25. set.add(one);\n26. set.add(two);\nA programmer iterates over the TreeSet and prints the name of each Drink object.\nWhat is the result?\n"
}, {
  "number" : 163,
  "answers" : [ {
    "key" : "A",
    "text" : " class MinMax<E extends Comparable<E>> {\nE min = null;\nE max = null;\npublic MinMax() {}\npublic void put(E value) { /* store min or max */ }\n"
  }, {
    "key" : "B",
    "text" : " class MinMax<E implements Comparable<E>> {\nE min = null;\nE max = null;\npublic MinMax() {}\npublic void put(E value) { /* store min or max */ }\n"
  }, {
    "key" : "C",
    "text" : " class MinMax<E extends Comparable<E>> {\n<E> E min = null;\n<E> E max = null;\npublic MinMax() {}\npublic <E> void put(E value) { /* store min or max */ }\n"
  }, {
    "key" : "D",
    "text" : " class MinMax<E implements Comparable<E>> {\n<E> E min = null;\n<E> E max = null;\npublic MinMax() {}\npublic <E> void put(E value) { /* store min or max */ }\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "A programmer must create a generic class MinMax and the type parameter of MinMax\nmust implement Comparable. Which implementation of MinMax will compile?\n"
}, {
  "number" : 164,
  "answers" : [ {
    "key" : "A",
    "text" : " Set set = new TreeSet();\n"
  }, {
    "key" : "B",
    "text" : " Set set = new HashSet();\n"
  }, {
    "key" : "C",
    "text" : " Set set = new SortedSet();\n"
  }, {
    "key" : "D",
    "text" : " List set = new SortedList();\n"
  }, {
    "key" : "E",
    "text" : " Set set = new LinkedHashSet();\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n1. import java.util.*;\n2. public class Example {\n3. public static void main(String[] args) {\n4. // insert code here\n5. set.add(new Integer(2));\n6. set.add(new Integer(1));\n7. System.out.println(set);\n8. }\n9. }\nWhich code, inserted at line 4, guarantees that this program will output [1, 2]?\n"
}, {
  "number" : 165,
  "answers" : [ {
    "key" : "A",
    "text" : " B\n"
  }, {
    "key" : "B",
    "text" : " B, followed by an Exception.\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails due to an error on line 9.\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails due to an error on line 14.\n"
  }, {
    "key" : "E",
    "text" : " An Exception is thrown with no other output.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n5. class A {\n6. void foo() throws Exception { throw new Exception(); }\n7. }\n8. class SubB2 extends A {\n9. void foo() { System.out.println(\"B \"); }\n10. }\n11. class Tester {\n12. public static void main(String[] args) {\n13. A a = new SubB2();\n14. a.foo();\n15. }\n16. }\nWhat is the result?\n"
}, {
  "number" : 166,
  "answers" : [ {
    "key" : "A",
    "text" : " Line 92 will not execute.\n"
  }, {
    "key" : "B",
    "text" : " The connection will not be retrieved in line 85.\n"
  }, {
    "key" : "C",
    "text" : " The resource connection will not be closed on line 88.\n"
  }, {
    "key" : "D",
    "text" : " The enclosing method will throw an exception to its caller.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given:\n84. try {\n85. ResourceConnection con = resourceFactory.getConnection();\n86. Results r = con.query(\"GET INFO FROM CUSTOMER\");\n87. info = r.getData(); 88. con.close();\n89. } catch (ResourceException re) {\n90. errorLog.write(re.getMessage());\n91. }\n92. return info;\nWhich statement is true if a ResourceException is thrown on line 86?\n"
}, {
  "number" : 167,
  "answers" : [ {
    "key" : "A",
    "text" : " 23\n"
  }, {
    "key" : "B",
    "text" : " 234\n"
  }, {
    "key" : "C",
    "text" : " 235\n"
  }, {
    "key" : "D",
    "text" : " 2345\n"
  }, {
    "key" : "E",
    "text" : " 2357\n"
  }, {
    "key" : "F",
    "text" : " 23457\n"
  }, {
    "key" : "G",
    "text" : " Compilation fails.\n"
  } ],
  "sucessAnswers" : [ "G" ],
  "text" : "Given:\n3. public class Breaker {\n4. static String o = \"\";\n5. public static void main(String[] args) {\n6. z:\n7. o = o + 2;\n8. for(int x = 3; x < 8; x++) {\n9. if(x==4) break;\n10. if(x==6) break z;\n11. o = o + x;\n12. }\n13. System.out.println(o);\n14. }\n15. }\nWhat is the result?\n"
}, {
  "number" : 168,
  "answers" : [ {
    "key" : "A",
    "text" : " All of the assert statements are used appropriately.\n"
  }, {
    "key" : "B",
    "text" : " Only the assert statement on line 12 is used appropriately.\n"
  }, {
    "key" : "C",
    "text" : " Only the assert statement on line 15 is used appropriately.\n"
  }, {
    "key" : "D",
    "text" : " Only the assert statement on line 18 is used appropriately.\n"
  }, {
    "key" : "E",
    "text" : " Only the assert statements on lines 12 and 15 are used appropriately.\n"
  }, {
    "key" : "F",
    "text" : " Only the assert statements on lines 12 and 18 are used appropriately.\n"
  }, {
    "key" : "G",
    "text" : " Only the assert statements on lines 15 and 18 are used appropriately.\n"
  } ],
  "sucessAnswers" : [ "G" ],
  "text" : "Given:\n11. public void go(int x) {\n12. assert (x > 0);\n13. switch(x) {\n14. case 2: ;\n15. default: assert false;\n16. }\n17. }\n18. private void go2(int x) { assert (x < 0); }\nWhich statement is true?\n"
}, {
  "number" : 169,
  "answers" : [ {
    "key" : "A",
    "text" : " test\n"
  }, {
    "key" : "B",
    "text" : " Exception\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "D",
    "text" : " NullPointerException\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given:\n11. public static void main(String[] args) {\n12. try {\n13. args = null;\n14. args[0] = \"test\";\n15. System.out.println(args[0]);\n16. } catch (Exception ex) {\n17. System.out.println(\"Exception\");\n18. } catch (NullPointerException npe) {\n19. System.out.println(\"NullPointerException\");\n20. }\n21. }\nWhat is the result?\n"
}, {
  "number" : 170,
  "answers" : [ {
    "key" : "A",
    "text" : " 6\n"
  }, {
    "key" : "B",
    "text" : " 7\n"
  }, {
    "key" : "C",
    "text" : " 10\n"
  }, {
    "key" : "D",
    "text" : " 11\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "F",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\n11. public static void main(String[] args) {\n12. for (int i = 0; i <= 10; i++) {\n13. if (i > 6) break;\n14. }\n15. System.out.println(i);\n16. }\nWhat is the result?\n"
}, {
  "number" : 171,
  "answers" : [ {
    "key" : "A",
    "text" : " X, followed by an Exception.\n"
  }, {
    "key" : "B",
    "text" : " No output, and an Exception is thrown.\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails due to an error on line 14.\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails due to an error on line 16.\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails due to an error on line 17.\n"
  }, {
    "key" : "F",
    "text" : " X, followed by an Exception, followed by B.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n11. class X { public void foo() { System.out.print(\"X \"); } }\n12.\n13. public class SubB extends X {\n14. public void foo() throws RuntimeException {\n15. super.foo();\n16. if (true) throw new RuntimeException();\n17. System.out.print(\"B \");\n18. }\n19. public static void main(String[] args) {\n20. new SubB().foo();\n21. }\n22. }\nWhat is the result?\n"
}, {
  "number" : 172,
  "answers" : [ {
    "key" : "A",
    "text" : " True\n"
  }, {
    "key" : "B",
    "text" : " Not true\n"
  }, {
    "key" : "C",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails because of an error at line 12.\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails because of an error at line 19.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n11. public void testIfA() {\n12. if (testIfB(\"True\")) {\n13. System.out.println(\"True\");\n14. } else {\n15. System.out.println(\"Not true\");\n16. }\n17. }\n18. public Boolean testIfB(String str) {\n19. return Boolean.valueOf(str);\n20. }\nWhat is the result when method testIfA is invoked?\n"
}, {
  "number" : 173,
  "answers" : [ {
    "key" : "A",
    "text" : " ClassCastException\n"
  }, {
    "key" : "B",
    "text" : " NullPointerException\n"
  }, {
    "key" : "C",
    "text" : " NoClassDefFoundError\n"
  }, {
    "key" : "D",
    "text" : " NumberFormatException\n"
  }, {
    "key" : "E",
    "text" : " ArrayIndexOutOfBoundsException\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Which can appropriately be thrown by a programmer using Java SE technology to create\na desktop application?\n"
}, {
  "number" : 174,
  "answers" : [ {
    "key" : "A",
    "text" : " int []x = {1,2,3,4,5};\nfor(int y = 0; y < 6; y++)\nSystem.out.println(x[y]);\n"
  }, {
    "key" : "B",
    "text" : " static int[] x = {7,6,5,4};\nstatic { x[1] = 8;\nx[4] = 3; }\n"
  }, {
    "key" : "C",
    "text" : " for(int y = 10; y < 10; y++)\ndoStuff(y);\n"
  }, {
    "key" : "D",
    "text" : " void doOne(int x) { doTwo(x); }\nvoid doTwo(int y) { doThree(y); }\nvoid doThree(int z) { doTwo(z); }\n"
  }, {
    "key" : "E",
    "text" : " for(int x = 0; x < 1000000000; x++)\ndoStuff(x);\n"
  }, {
    "key" : "F",
    "text" : " void counter(int i) { counter(++i); }\n"
  } ],
  "sucessAnswers" : [ "D", "F" ],
  "text" : "Which two code fragments are most likely to cause a StackOverflowError? (Choose two.)\n"
}, {
  "number" : 175,
  "answers" : [ {
    "key" : "A",
    "text" : " three\n"
  }, {
    "key" : "B",
    "text" : " other\n"
  }, {
    "key" : "C",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails because of an error on line 12.\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails because of an error on line 13.\n"
  }, {
    "key" : "F",
    "text" : " Compilation fails because of an error on line 15.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n11. public static void main(String[] args) {\n12. Integer i = new Integer(1) + new Integer(2);\n13. switch(i) {\n14. case 3: System.out.println(\"three\"); break;\n15. default: System.out.println(\"other\"); break;\n16. }\n17. }\n What is the result?\n"
}, {
  "number" : 176,
  "answers" : [ {
    "key" : "A",
    "text" : " 0\n"
  }, {
    "key" : "B",
    "text" : " 1\n"
  }, {
    "key" : "C",
    "text" : " 2\n"
  }, {
    "key" : "D",
    "text" : " 3\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n5. public class Tahiti {\n6. Tahiti t;\n7. public static void main(String[] args) {\n8. Tahiti t = new Tahiti();\n9. Tahiti t2 = t.go(t);\n10. t2 = null;\n11. // more code here\n12. }\n13. Tahiti go(Tahiti t) {\n14. Tahiti t1 = new Tahiti(); Tahiti t2 = new Tahiti();\n15. t1.t = t2; t2.t = t1; t.t = t2;\n16. return t1;\n17. }\n18. }\nWhen line 11 is reached, how many objects are eligible for garbage collection?\n"
}, {
  "number" : 177,
  "answers" : [ {
    "key" : "A",
    "text" : " 0\n"
  }, {
    "key" : "B",
    "text" : " 1\n"
  }, {
    "key" : "C",
    "text" : " 2\n"
  }, {
    "key" : "D",
    "text" : " 3\n"
  }, {
    "key" : "E",
    "text" : " 4\n"
  }, {
    "key" : "F",
    "text" : " 6\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\n3. interface Animal { void makeNoise(); }\n4. class Horse implements Animal {\n5. Long weight = 1200L;\n6. public void makeNoise() { System.out.println(\"whinny\"); }\n7. }\n8. public class Icelandic extends Horse\n{ 9. public void makeNoise() { System.out.println(\"vinny\"); }\n10. public static void main(String[] args) {\n11. Icelandic i1 = new Icelandic();\n12. Icelandic i2 = new Icelandic(); 12. Icelandic i3 = new Icelandic();\n13. i3 = i1; i1 = i2; i2 = null; i3 = i1;\n14. } 15. }\nWhen line 14 is reached, how many objects are eligible for the garbage collector?\n"
}, {
  "number" : 178,
  "answers" : [ {
    "key" : "A",
    "text" : " System.load(\"prop.custom\");\n"
  }, {
    "key" : "B",
    "text" : " System.getenv(\"prop.custom\");\n"
  }, {
    "key" : "C",
    "text" : " System.property(\"prop.custom\");\n"
  }, {
    "key" : "D",
    "text" : " System.getProperty(\"prop.custom\");\n"
  }, {
    "key" : "E",
    "text" : " System.getProperties().getProperty(\"prop.custom\");\n"
  } ],
  "sucessAnswers" : [ "D", "E" ],
  "text" : "Given:\n11. public class Commander {\n12. public static void main(String[] args) {\n13. String myProp = /* insert code here */\n14. System.out.println(myProp);\n15. }\n16. }\nand the command line: java -Dprop.custom=gobstopper Commander Which two, placed\non line 13, will produce the output gobstopper? (Choose two.)\n"
}, {
  "number" : 179,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "C",
    "text" : " The attribute id in the ItemTest object remains unchanged.\n"
  }, {
    "key" : "D",
    "text" : " The attribute id in the ItemTest object is modified to the new value.\n"
  }, {
    "key" : "E",
    "text" : " A new ItemTest object is created with the preferred value in the id attribute.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n 11. public class ItemTest {\n12. private final int id;\n13. public ItemTest(int id) { this.id = id; }\n14. public void updateId(int newId) { id = newId; }\n15.\n16. public static void main(String[] args) {\n17. ItemTest fa = new ItemTest(42);\n18. fa.updateId(69);\n19. System.out.println(fa.id);\n20. }\n21. }\nWhat is the result?\n"
}, {
  "number" : 180,
  "answers" : [ {
    "key" : "A",
    "text" : " The JAR file is located at $JAVA_HOME/jre/classes/myLib.jar.\n"
  }, {
    "key" : "B",
    "text" : " The JAR file is located at $JAVA_HOME/jre/lib/ext/myLib.jar..\n"
  }, {
    "key" : "C",
    "text" : " The JAR file is located at /foo/myLib.jar and a classpath environment variable is set\nthat includes /foo/myLib.jar/Paper.class.\n"
  }, {
    "key" : "D",
    "text" : " The JAR file is located at /foo/myLib.jar and a classpath environment variable is set\nthat includes /foo/myLib.jar.\n"
  }, {
    "key" : "E",
    "text" : " The JAR file is located at /foo/myLib.jar and the Book class is compiled using javac -\ncp /foo/myLib.jar/Paper Book.java.\n"
  }, {
    "key" : "F",
    "text" : " The JAR file is located at /foo/myLib.jar and the Book class is compiled using javac -d\n/foo/myLib.jar Book.java\n"
  }, {
    "key" : "G",
    "text" : " The JAR file is located at /foo/myLib.jar and the Book class is compiled using javac -\nclasspath /foo/myLib.jar Book.java\n"
  } ],
  "sucessAnswers" : [ "B", "D", "G" ],
  "text" : "A developer is creating a class Book, that needs to access class Paper. The Paper class is\ndeployed in a JAR named myLib.jar. Which three, taken independently, will allow the\ndeveloper to use the Paper class while compiling the Book class? (Choose three.)\n"
}, {
  "number" : 181,
  "answers" : [ {
    "key" : "A",
    "text" : " No output is produced. 1 2 3\n"
  }, {
    "key" : "B",
    "text" : " No output is produced. 2 3 4\n"
  }, {
    "key" : "C",
    "text" : " No output is produced. 1 2 3 4\n"
  }, {
    "key" : "D",
    "text" : " An exception is thrown at runtime. 1 2 3\n"
  }, {
    "key" : "E",
    "text" : " An exception is thrown at runtime. 2 3 4\n"
  }, {
    "key" : "F",
    "text" : " An exception is thrown at runtime. 1 2 3 4\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n15. public class Yippee {\n16. public static void main(String [] args) {\n17. for(int x = 1; x < args.length; x++) {\n18. System.out.print(args[x] + \" \");\n19. }\n20. }\n21. }\nand two separate command line invocations: java Yippee java Yippee 1 2 3 4 What is the\nresult?\n"
}, {
  "number" : 182,
  "answers" : [ {
    "key" : "A",
    "text" : " 300-100-100-100-100\n"
  }, {
    "key" : "B",
    "text" : " 300-300-100-100-100\n"
  }, {
    "key" : "C",
    "text" : " 300-300-300-100-100\n"
  }, {
    "key" : "D",
    "text" : " 300-300-300-300-100\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Click the Exhibit button.\nWhat is the output of the program shown in the exhibit?\n"
}, {
  "number" : 183,
  "answers" : [ {
    "key" : "A",
    "text" : " text\n"
  }, {
    "key" : "B",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "C",
    "text" : " <msg>text</msg>\n"
  }, {
    "key" : "D",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given classes defined in two different files:\n1. package packageA;\n2. public class Message {\n3. String getText() { return \"text\"; }\n4. }\n And:\n1. package packageB;\n2. public class XMLMessage extends packageA.Message {\n3. String getText() { return \"<msg>text</msg>\";}\n4. public static void main(String[] args) {\n5. System.out.println(new XMLMessage().getText());\n6. }\n7. }\nWhat is the result of executing XMLMessage.main?\n"
}, {
  "number" : 184,
  "answers" : [ {
    "key" : "A",
    "text" : " w-f\n"
  }, {
    "key" : "B",
    "text" : " f-p w-f\n"
  }, {
    "key" : "C",
    "text" : " w-f b-f\n"
  }, {
    "key" : "D",
    "text" : " f-p w-f b-f\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "F",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n3. interface Fish { }\n4. class Perch implements Fish { }\n5. class Walleye extends Perch { }\n6. class Bluegill { }\n7. public class Fisherman {\n8. public static void main(String[] args) {\n9. Fish f = new Walleye();\n10. Walleye w = new Walleye();\n11. Bluegill b = new Bluegill();\n12. if(f instanceof Perch) System.out.print(\"f-p \");\n13. if(w instanceof Fish) System.out.print(\"w-f \");\n14. if(b instanceof Fish) System.out.print(\"b-f \");\n15. }\n16. }\nWhat is the result?\n"
}, {
  "number" : 185,
  "answers" : [ {
    "key" : "A",
    "text" : " java MainClass if run from the /apps directory\n"
  }, {
    "key" : "B",
    "text" : " java com.company.application.MainClass if run from the /apps directory\n"
  }, {
    "key" : "C",
    "text" : " java -classpath /apps com.company.application.MainClass if run from any directory\n"
  }, {
    "key" : "D",
    "text" : " java -classpath . MainClass if run from the /apps/com/company/application directory\n"
  }, {
    "key" : "E",
    "text" : " java -classpath /apps/com/company/application:. MainClass if run from the /apps\ndirectory\n"
  }, {
    "key" : "F",
    "text" : " java com.company.application.MainClass if run from the\n/apps/com/company/application directory\n"
  } ],
  "sucessAnswers" : [ "B", "C" ],
  "text" : "Given:\n1. package com.company.application;\n2.\n3. public class MainClass {\n4. public static void main(String[] args) {}\n5. }\nAnd MainClass exists in the /apps/com/company/application directory. Assume the\nCLASSPATH environment variable is set to \".\" (current directory).Which two java\ncommands entered at the command line will run MainClass? (Choose two.)\n"
}, {
  "number" : 187,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " Nothing is added to the file system.\n"
  }, {
    "key" : "C",
    "text" : " Only a new file is created on the file system.\n"
  }, {
    "key" : "D",
    "text" : " Only a new directory is created on the file system.\n"
  }, {
    "key" : "E",
    "text" : " Both a new file and a new directory are created on the file system.\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given that the current directory is empty, and that the user has read and write privileges\nto the current directory, and the following:\n1. import java.io.*;\n2. public class Maker {\n3. public static void main(String[] args) {\n4. File dir = new File(\"dir\");\n5. File f = new File(dir, \"f\");\n6. }\n7. }\nWhich statement is true?\n"
}, {
  "number" : 188,
  "answers" : [ {
    "key" : "A",
    "text" : " The value of b is 2.\n"
  }, {
    "key" : "B",
    "text" : " The value of a is 3.14.\n"
  }, {
    "key" : "C",
    "text" : " The value of b is 2.00.\n"
  }, {
    "key" : "D",
    "text" : " The value of a is 3.141.\n"
  }, {
    "key" : "E",
    "text" : " The value of a is 3.1415.\n"
  }, {
    "key" : "F",
    "text" : " The value of a is 3.1416.\n"
  }, {
    "key" : "G",
    "text" : " The value of b is 2.0000.\n"
  } ],
  "sucessAnswers" : [ "C", "F" ],
  "text" : "Given:\n12. NumberFormat nf = NumberFormat.getInstance();\n13. nf.setMaximumFractionDigits(4);\n14. nf.setMinimumFractionDigits(2);\n15. String a = nf.format(3.1415926);\n16. String b = nf.format(2);\n Which two statements are true about the result if the default locale is Locale.US?\n(Choose two.)\n"
}, {
  "number" : 189,
  "answers" : [ {
    "key" : "A",
    "text" : " Objects from classes that use aggregation cannot be serialized.\n"
  }, {
    "key" : "B",
    "text" : " An object serialized on one JVM can be successfully deserialized on a different JVM.\n"
  }, {
    "key" : "C",
    "text" : " The values in fields with the volatile modifier will NOT survive serialization and\ndeserialization.\n"
  }, {
    "key" : "D",
    "text" : " The values in fields with the transient modifier will NOT survive serialization and\ndeserialization.\n"
  }, {
    "key" : "E",
    "text" : " It is legal to serialize an object of a type that has a supertype that does NOT implement\njava.io.Serializable.\n"
  } ],
  "sucessAnswers" : [ "B", "D", "E" ],
  "text" : "Which three statements concerning the use of the java.io.Serializable interface are true?\n(Choose three.)\n"
}, {
  "number" : 190,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " After line 15, the value of age is 5.\n"
  }, {
    "key" : "C",
    "text" : " After line 15, the value of age is 3.\n"
  }, {
    "key" : "D",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n12. String csv = \"Sue,5,true,3\";\n13. Scanner scanner = new Scanner( csv );\n14. scanner.useDelimiter(\",\");\n15. int age = scanner.nextInt();\nWhat is the result?\n"
}, {
  "number" : 191,
  "answers" : [ {
    "key" : "A",
    "text" : " String s = c.readLine();\n"
  }, {
    "key" : "B",
    "text" : " char[] c = c.readLine();\n"
  }, {
    "key" : "C",
    "text" : " String s = c.readConsole();\n"
  }, {
    "key" : "D",
    "text" : " char[] c = c.readConsole();\n"
  }, {
    "key" : "E",
    "text" : " String s = c.readLine(\"%s\", \"name \");\n"
  }, {
    "key" : "F",
    "text" : " char[] c = c.readLine(\"%s\", \"name \");\n"
  } ],
  "sucessAnswers" : [ "A", "E" ],
  "text" : "Given that c is a reference to a valid java.io.Console object, which two code fragments\nread a line of text from the console? (Choose two.)\n"
}, {
  "number" : 192,
  "answers" : [ {
    "key" : "A",
    "text" : " a b c\n"
  }, {
    "key" : "B",
    "text" : " 1 2 3\n"
  }, {
    "key" : "C",
    "text" : " a1b2c3\n"
  }, {
    "key" : "D",
    "text" : " a1 b2 c3\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "F",
    "text" : " The code runs with no output.\n"
  }, {
    "key" : "G",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n11. String test = \"a1b2c3\";\n12. String[] tokens = test.split(\"\\\\d\");\n13. for(String s: tokens) System.out.print(s + \" \");\nWhat is the result?\n"
}, {
  "number" : 193,
  "answers" : [ {
    "key" : "A",
    "text" : " 35. DateFormat df = DateFormat.getDateFormat();\n42. d.setTime( (60 * 60 * 24) + d.getTime());\n"
  }, {
    "key" : "B",
    "text" : " 35. DateFormat df = DateFormat.getDateInstance();\n42. d.setTime( (1000 * 60 * 60 * 24) + d.getTime());\n"
  }, {
    "key" : "C",
    "text" : " 35. DateFormat df = DateFormat.getDateFormat();\n42. d.setLocalTime( (1000*60*60*24) + d.getLocalTime());\n"
  }, {
    "key" : "D",
    "text" : " 35. DateFormat df = DateFormat.getDateInstance();\n42. d.setLocalTime( (60 * 60 * 24) + d.getLocalTime());\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n33. Date d = new Date(0);\n34. String ds = \"December 15, 2004\";\n35. // insert code here\n36. try {\n37. d = df.parse(ds);\n38. }\n39. catch(ParseException e) {\n40. System.out.println(\"Unable to parse \" + ds);\n41. }\n42. // insert code here too\nWhat creates the appropriate DateFormat object and adds a day to the Date object?\n"
}, {
  "number" : 194,
  "answers" : [ {
    "key" : "A",
    "text" : " true true\n"
  }, {
    "key" : "B",
    "text" : " false true\n"
  }, {
    "key" : "C",
    "text" : " true false\n"
  }, {
    "key" : "D",
    "text" : " false false\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "F",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n1. public class KungFu {\n 2. public static void main(String[] args) {\n3. Integer x = 400;\n4. Integer y = x;\n5. x++;\n6. StringBuilder sb1 = new StringBuilder(\"123\");\n7. StringBuilder sb2 = sb1;\n8. sb1.append(\"5\");\n9. System.out.println((x==y) + \" \" + (sb1==sb2));\n10. }\n11. }\nWhat is the result?\n"
}, {
  "number" : 195,
  "answers" : [ {
    "key" : "A",
    "text" : " It is true that j==i.\n"
  }, {
    "key" : "B",
    "text" : " It is false that j==i.\n"
  }, {
    "key" : "C",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails because of an error in line 13.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n11. class Converter {\n12. public static void main(String[] args) {\n13. Integer i = args[0];\n14. int j = 12;\n15. System.out.println(\"It is \" + (j==i) + \" that j==i.\");\n16. }\n17. }\nWhat is the result when the programmer attempts to compile the code and run it with the\ncommand java Converter 12?\n"
}, {
  "number" : 196,
  "answers" : [ {
    "key" : "A",
    "text" : " Foo.beta() is a valid invocation of beta().\n"
  }, {
    "key" : "B",
    "text" : " Foo.alpha() is a valid invocation of alpha().\n"
  }, {
    "key" : "C",
    "text" : " Method beta() can directly call method alpha().\n"
  }, {
    "key" : "D",
    "text" : " Method alpha() can directly call method beta().\n"
  } ],
  "sucessAnswers" : [ "B", "C" ],
  "text" : "Given\n10.  class Foo {\n11. static void alpha() { /* more code here */ }\n12. void beta() { /* more code here */ }\n13. }\nWhich two statements are true? (Choose two.)\n"
}, {
  "number" : 197,
  "answers" : [ {
    "key" : "A",
    "text" : " Line 26 prints \"a\" to System.out.\n"
  }, {
    "key" : "B",
    "text" : " Line 26 prints \"b\" to System.out.\n"
  }, {
    "key" : "C",
    "text" : " An exception is thrown at line 26 at runtime.\n"
  }, {
    "key" : "D",
    "text" : " Compilation of class A will fail due to an error in line 6.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Click the Exhibit button.\nGiven:\n25. A a = new A();\n26. System.out.println(a.doit(4, 5));\nWhat is the result?\n"
}, {
  "number" : 198,
  "answers" : [ {
    "key" : "A",
    "text" : " static final int[] a = { 100,200 };\n"
  }, {
    "key" : "B",
    "text" : " static final int[] a; static { a=new int[2]; a[0]=100; a[1]=200; }\n"
  }, {
    "key" : "C",
    "text" : " static final int[] a = new int[2]{ 100,200 };\n"
  }, {
    "key" : "D",
    "text" : " static final int[] a; static void init() { a = new int[3]; a[0]=100; a[1]=200; }\n"
  } ],
  "sucessAnswers" : [ "A", "B" ],
  "text" : "Which two code fragments correctly create and initialize a static array of int elements?\n(Choose two.)\n"
}, {
  "number" : 199,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " atom granite\n"
  }, {
    "key" : "C",
    "text" : " granite granite\n"
  }, {
    "key" : "D",
    "text" : " atom granite granite\n"
  }, {
    "key" : "E",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "F",
    "text" : " atom granite atom granite\n"
  } ],
  "sucessAnswers" : [ "F" ],
  "text" : "Given:\n5. class Atom {\n6. Atom() { System.out.print(\"atom \"); }\n7. }\n8. class Rock extends Atom {\n9. Rock(String type) { System.out.print(type); }\n10. }\n11. public class Mountain extends Rock {\n12. Mountain() {\n13. super(\"granite \");\n14. new Rock(\"granite \");\n15. }\n16. public static void main(String[] a) { new Mountain(); }\n17. }\nWhat is the result?\n"
}, {
  "number" : 200,
  "answers" : [ {
    "key" : "A",
    "text" : " The code will compile without changes.\n"
  }, {
    "key" : "B",
    "text" : " The code will compile if public Tree() { Plant(); } is added to the Tree class.\n"
  }, {
    "key" : "C",
    "text" : " The code will compile if public Plant() { Tree(); } is added to the Plant class.\n"
  }, {
    "key" : "D",
    "text" : " The code will compile if public Plant() { this(\"fern\"); } is added to the Plant class.\n"
  }, {
    "key" : "E",
    "text" : " The code will compile if public Plant() { Plant(\"fern\"); } is added to the Plant class.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n1. public class Plant {\n2. private String name;\n3. public Plant(String name) { this.name = name; }\n4. public String getName() { return name; }\n5. }\n1. public class Tree extends Plant {\n2. public void growFruit() { }\n3. public void dropLeaves() { }\n4. }\nWhich statement is true?\n"
}, {
  "number" : 201,
  "answers" : [ {
    "key" : "A",
    "text" : " go in Goban go in Sente go in Sente\n"
  }, {
    "key" : "B",
    "text" : " go in Sente go in Sente go in Goban\n"
  }, {
    "key" : "C",
    "text" : " go in Sente go in Goban go in Goban\n"
  }, {
    "key" : "D",
    "text" : " go in Goban go in Goban go in Sente\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails because of an error in line 17.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Click the Exhibit button. What is the result?\n"
}, {
  "number" : 202,
  "answers" : [ {
    "key" : "A",
    "text" : " public class Session implements Runnable, Cloneable { public void run(); public\nObject clone(); }\n"
  }, {
    "key" : "B",
    "text" : " public class Session extends Runnable, Cloneable { public void run() { /* do\nsomething */ } public Object clone() { /* make a copy */ }\n"
  }, {
    "key" : "C",
    "text" : " public class Session implements Runnable, Cloneable { public void run() { /* do\nsomething */ } public Object clone() { /* make a copy */ }\n"
  }, {
    "key" : "D",
    "text" : " public abstract class Session implements Runnable, Cloneable { public void run() { /*\ndo something */ } public Object clone() { /*make a copy */ }\n"
  }, {
    "key" : "E",
    "text" : " public class Session implements Runnable, implements Cloneable { public void run()\n{ /* do something */ } public Object clone() { /* make a copy */ }\n"
  } ],
  "sucessAnswers" : [ "C", "D" ],
  "text" : "Which two classes correctly implement both the java.lang.Runnable and the java.lang.\nCloneable interfaces? (Choose two.)\n"
}, {
  "number" : 203,
  "answers" : [ {
    "key" : "A",
    "text" : " 0\n"
  }, {
    "key" : "B",
    "text" : " 1\n"
  }, {
    "key" : "C",
    "text" : " 2\n"
  }, {
    "key" : "D",
    "text" : " 3\n"
  }, {
    "key" : "E",
    "text" : " 4\n"
  }, {
    "key" : "F",
    "text" : " 5\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n11. class Mud {\n12. // insert code here\n13. System.out.println(\"hi\");\n14. }\n15. }\nAnd the following five fragments:\npublic static void main(String...a) {\npublic static void main(String.* a) {\npublic static void main(String... a) {\npublic static void main(String[]... a) {\npublic static void main(String...[] a) {\nHow many of the code fragments, inserted independently at line 12, compile?\n"
}, {
  "number" : 204,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation succeeds.\n"
  }, {
    "key" : "B",
    "text" : " Compilation fails due to multiple errors.\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails due to an error only on line 20.\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails due to an error only on line 21.\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails due to an error only on line 22.\n"
  }, {
    "key" : "F",
    "text" : " Compilation fails due to an error only on line 12.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n11. public interface A111 {\n12. String s = \"yo\";\n13. public void method1();\n14. }\n17. interface B { }\n20. interface C extends A111, B {\n21. public void method1();\n22. public void method1(int x);\n23. } What is the result?\n"
}, {
  "number" : 205,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " The code compiles and the output is 2.\n"
  }, {
    "key" : "C",
    "text" : " If lines 16, 17 and 18 were removed, compilation would fail.\n"
  }, {
    "key" : "D",
    "text" : " If lines 24, 25 and 26 were removed, compilation would fail.\n"
  }, {
    "key" : "E",
    "text" : " If lines 16, 17 and 18 were removed, the code would compile and the output would be\n2.\n"
  }, {
    "key" : "F",
    "text" : " If lines 24, 25 and 26 were removed, the code would compile and the output would be\n1.\n"
  } ],
  "sucessAnswers" : [ "B", "E", "F" ],
  "text" : "Click the Exhibit button.\nWhich three statements are true? (Choose three.)\n"
}, {
  "number" : 206,
  "answers" : [ {
    "key" : "A",
    "text" : " Afoo Afoo\n"
  }, {
    "key" : "B",
    "text" : " Afoo Bfoo\n"
  }, {
    "key" : "C",
    "text" : " Bfoo Afoo\n"
  }, {
    "key" : "D",
    "text" : " Bfoo Bfoo\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "F",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n11. class Alpha {\n12. public void foo() { System.out.print(\"Afoo \"); }\n13. }\n14. public class Beta extends Alpha {\n15. public void foo() { System.out.print(\"Bfoo \"); }\n16. public static void main(String[] args) {\n17. Alpha a = new Beta();\n18. Beta b = (Beta)a;\n19. a.foo(); 20. b.foo();\n21. }\n22. }\nWhat is the result?\n"
}, {
  "number" : 207,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "C",
    "text" : " The code executes normally and prints \"foo\".\n"
  }, {
    "key" : "D",
    "text" : " The code executes normally, but nothing is printed.\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n1. public class Threads4 {\n2. public static void main (String[] args) {\n3. new Threads4().go();\n4. }\n5. public void go() {\n 6. Runnable r = new Runnable() {\n7. public void run() {\n8. System.out.print(\"foo\");\n9. }\n10. };\n11. Thread t = new Thread(r);\n12. t.start();\n13. t.start();\n14. }\n15. }\nWhat is the result?\n"
}, {
  "number" : 208,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "C",
    "text" : " The code executes normally and prints \"sleep\".\n"
  }, {
    "key" : "D",
    "text" : " The code executes normally, but nothing is printed.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given:\n1. public class TestOne {\n2. public static void main (String[] args) throws Exception {\n3. Thread.sleep(3000);\n4. System.out.println(\"sleep\");\n5. }\n6. }\nWhat is the result?\n"
}, {
  "number" : 209,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "C",
    "text" : " The code executes and prints \"running\".\n"
  }, {
    "key" : "D",
    "text" : " The code executes and prints \"runningrunning\".\n"
  }, {
    "key" : "E",
    "text" : " The code executes and prints \"runningrunningrunning\".\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\n 1. public class Threads3 implements Runnable {\n2. public void run() {\n3. System.out.print(\"running\");\n4. }\n5. public static void main(String[] args) {\n6. Thread t = new Thread(new Threads3());\n7. t.run();\n8. t.run();\n9. t.start();\n10. }\n11. }\nWhat is the result?\n"
}, {
  "number" : 210,
  "answers" : [ {
    "key" : "A",
    "text" : " declare reset() using the synchronized keyword\n"
  }, {
    "key" : "B",
    "text" : " declare getName() using the synchronized keyword\n"
  }, {
    "key" : "C",
    "text" : " declare getCount() using the synchronized keyword\n"
  }, {
    "key" : "D",
    "text" : " declare the constructor using the synchronized keyword\n"
  }, {
    "key" : "E",
    "text" : " declare increment() using the synchronized keyword\n"
  } ],
  "sucessAnswers" : [ "A", "C", "E" ],
  "text" : "Given:\npublic class NamedCounter {\nprivate final String name;\nprivate int count;\npublic NamedCounter(String name) { this.name = name; }\npublic String getName() { return name; }\npublic void increment() { count++; }\npublic int getCount() { return count; } public void reset() { count = 0;\n}\nWhich three changes should be made to adapt this class to be used safely by multiple\nthreads? (Choose three.)\n"
}, {
  "number" : 211,
  "answers" : [ {
    "key" : "A",
    "text" : " Thread.wait();\n"
  }, {
    "key" : "B",
    "text" : " Thread.join();\n"
  }, {
    "key" : "C",
    "text" : " Thread.yield();\n"
  }, {
    "key" : "D",
    "text" : " Thread.sleep(1);\n"
  }, {
    "key" : "E",
    "text" : " Thread.notify();\n"
  } ],
  "sucessAnswers" : [ "C", "D" ],
  "text" : "Given that Triangle implements Runnable, and:\n31. void go() throws Exception {\n32. Thread t = new Thread(new Triangle());\n33. t.start();\n34. for(int x = 1; x < 100000; x++) {\n35. //insert code here\n36. if(x%100 == 0) System.out.print(\"g\");\n37. } }\n38. public void run() {\n39. try {\n40. for(int x = 1; x < 100000; x++) {\n41. // insert the same code here\n42. if(x%100 == 0) System.out.print(\"t\");\n43. }\n44. } catch (Exception e) { }\n45. }\nWhich two statements, inserted independently at both lines 35 and 41, tend to allow both\nthreads to temporarily pause and allow the other thread to execute? (Choose two.)\n"
}, {
  "number" : 212,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "C",
    "text" : " Synchronizing the run() method would make the class thread-safe.\n"
  }, {
    "key" : "D",
    "text" : " The data in variable \"x\" are protected from concurrent access problems.\n"
  }, {
    "key" : "E",
    "text" : " Declaring the doThings() method as static would make the class thread-safe.\n"
  }, {
    "key" : "F",
    "text" : " Wrapping the statements within doThings() in a synchronized(new Object()) { } block\nwould make the class thread-safe.\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\n1. public class TestSeven extends Thread {\n2. private static int x;\n3. public synchronized void doThings() {\n4. int current = x;\n5. current++;\n6. x = current;\n7. }\n8. public void run() {\n9. doThings();\n10. }\n11.}\nWhich statement is true?\n"
}, {
  "number" : 213,
  "answers" : [ {
    "key" : "A",
    "text" : " int Long\n"
  }, {
    "key" : "B",
    "text" : " Short Long\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "D",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n11. public class Yikes {\n12.\n13. public static void go(Long n) {System.out.print(\"Long \");}\n14. public static void go(Short n) {System.out.print(\"Short \");}\n15. public static void go(int n) {System.out.print(\"int \");}\n16. public static void main(String [] args) {\n17. short y = 6;\n18. long z = 7;\n19. go(y);\n20. go(z);\n21. }\n22. }\nWhat is the result?\n"
}, {
  "number" : 214,
  "answers" : [ {
    "key" : "A",
    "text" : " The value of s is 14-dic-2000.\n"
  }, {
    "key" : "B",
    "text" : " The value of s is Dec 14, 2000.\n"
  }, {
    "key" : "C",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails because of an error in line 13.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n12. Date date = new Date();\n13. df.setLocale(Locale.ITALY);\n14. String s = df.format(date);\nThe variable df is an object of type DateFormat that has been initialized in line 11. What\nis the result if this code is run on December 14, 2000?\n"
}, {
  "number" : 215,
  "answers" : [ {
    "key" : "A",
    "text" : " When using versions of Java technology earlier than 5.0.\n"
  }, {
    "key" : "B",
    "text" : " When sharing a StringBuffer among multiple threads.\n"
  }, {
    "key" : "C",
    "text" : " When using the java.io class StringBufferInputStream.\n"
  }, {
    "key" : "D",
    "text" : " When you plan to reuse the StringBuffer to build more than one string.\n"
  } ],
  "sucessAnswers" : [ "A", "B" ],
  "text" : "Which two scenarios are NOT safe to replace a StringBuffer object with a StringBuilder\nobject? (Choose two.)\n"
}, {
  "number" : 216,
  "answers" : [ {
    "key" : "A",
    "text" : " pw: got fido name: bob got bob\n"
  }, {
    "key" : "B",
    "text" : " pw: fido got fido name: bob got bob\n"
  }, {
    "key" : "C",
    "text" : " pw: got fido name: bob got bob\n"
  }, {
    "key" : "D",
    "text" : " pw: fido got fido name: bob got bob\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "F",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given that c is a reference to a valid java.io.Console object, and:\n11. String pw = c.readPassword(\"%s\", \"pw: \");\n12. System.out.println(\"got \" + pw);\n13. String name = c.readLine(\"%s\", \"name: \");\n14. System.out.println(\" got \", name);\nIf the user types fido when prompted for a password, and then responds bob when\nprompted for a name, what is the result?\n"
}, {
  "number" : 217,
  "answers" : [ {
    "key" : "A",
    "text" : " 0\n"
  }, {
    "key" : "B",
    "text" : " 1\n"
  }, {
    "key" : "C",
    "text" : " 4\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "E",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n11. String test = \"This is a test\";\n12. String[] tokens = test.split(\"\\s\");\n13. System.out.println(tokens.length);\nWhat is the result?\n"
}, {
  "number" : 218,
  "answers" : [ {
    "key" : "A",
    "text" : " ad\n"
  }, {
    "key" : "B",
    "text" : " ada\n"
  }, {
    "key" : "C",
    "text" : " add\n"
  }, {
    "key" : "D",
    "text" : " adad\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "F",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n10. import java.io.*;\n11. class Animal {\n12. Animal() { System.out.print(\"a\"); }\n13. }\n14. class Dog extends Animal implements Serializable {\n15. Dog() { System.out.print(\"d\"); }\n16. }\n17. public class Beagle extends Dog { }\nIf an instance of class Beagle is created, then Serialized, then deSerialized, what is the\nresult?\n"
}, {
  "number" : 219,
  "answers" : [ {
    "key" : "A",
    "text" : " b = nf.parse( input );\n"
  }, {
    "key" : "B",
    "text" : " b = nf.format( input );\n"
  }, {
    "key" : "C",
    "text" : " b = nf.equals( input );\n"
  }, {
    "key" : "D",
    "text" : " b = nf.parseObject( input );\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n11. double input = 314159.26;\n12. NumberFormat nf = NumberFormat.getInstance(Locale.ITALIAN);\n13. String b;\n14. //insert code here\nWhich code, inserted at line 14, sets the value of b to 314.159,26?\n"
}, {
  "number" : 220,
  "answers" : [ {
    "key" : "A",
    "text" : " Line 4 of class Target can be changed to return i++;\n"
  }, {
    "key" : "B",
    "text" : " Line 2 of class Target can be changed to private int i = 1;\n"
  }, {
    "key" : "C",
    "text" : " Line 3 of class Target can be changed to private int addOne(){\n"
  }, {
    "key" : "D",
    "text" : " Line 2 of class Target can be changed to private Integer i = 0;\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n1. public class Target {\n2. private int i = 0;\n3. public int addOne(){\n4. return ++i;\n5. }\n6. }\n And:\n1. public class Client {\n2. public static void main(String[] args){\n3. System.out.println(new Target().addOne());\n4. }\n5. }\nWhich change can you make to Target without affecting Client?\n"
}, {
  "number" : 221,
  "answers" : [ {
    "key" : "A",
    "text" : " peep\n"
  }, {
    "key" : "B",
    "text" : " bark\n"
  }, {
    "key" : "C",
    "text" : " meow\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "E",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\n 11. class Animal { public String noise() { return \"peep\"; } }\n12. class Dog extends Animal {\n13. public String noise() { return \"bark\"; }\n14. }\n15. class Cat extends Animal {\n16. public String noise() { return \"meow\"; }\n17. }\n...\n30. Animal animal = new Dog();\n31. Cat cat = (Cat)animal;\n32. System.out.println(cat.noise());\nWhat is the result?\n"
}, {
  "number" : 222,
  "answers" : [ {
    "key" : "A",
    "text" : " x.a2();\n"
  }, {
    "key" : "B",
    "text" : " z.a2();\n"
  }, {
    "key" : "C",
    "text" : " z.c1();\n"
  }, {
    "key" : "D",
    "text" : " z.a1();\n"
  }, {
    "key" : "E",
    "text" : " y.c1();\n"
  }, {
    "key" : "F",
    "text" : " x.a1();\n"
  } ],
  "sucessAnswers" : [ "A", "B", "D", "F" ],
  "text" : "Given:\n10. abstract class A {\n11. abstract void a1();\n12. void a2() { }\n13. }\n14. class B extends A {\n15. void a1() { }\n16. void a2() { }\n17. }\n18. class C extends B { void c1() { } } and: A x = new B(); C y = new C(); A z = new\nC();\nWhat are four valid examples of polymorphic method calls? (Choose four.)\n"
}, {
  "number" : 223,
  "answers" : [ {
    "key" : "A",
    "text" : " super(name, baseSalary);\n"
  }, {
    "key" : "B",
    "text" : " this.commission = commission;\n"
  }, {
    "key" : "C",
    "text" : " super(); this.commission = commission;\n"
  }, {
    "key" : "D",
    "text" : " this.commission = commission; super();\n"
  }, {
    "key" : "E",
    "text" : " super(name, baseSalary); this.commission = commission;\n"
  }, {
    "key" : "F",
    "text" : " this.commission = commission; super(name, baseSalary);\n"
  }, {
    "key" : "G",
    "text" : " super(name, baseSalary, commission);\n"
  } ],
  "sucessAnswers" : [ "A", "E" ],
  "text" : "Given:\n3. class Employee {\n4. String name; double baseSalary;\n5. Employee(String name, double baseSalary) {\n6. this.name = name;\n7. this.baseSalary = baseSalary;\n8. }\n9. }\n10. public class SalesPerson extends Employee {\n11. double commission;\n12. public SalesPerson(String name, double baseSalary, double commission) {\n13. // insert code here\n14. }\n15. }\nWhich two code fragments, inserted independently at line 13, will compile? (Choose\ntwo.)\n"
}, {
  "number" : 224,
  "answers" : [ {
    "key" : "A",
    "text" : " Tight coupling\n"
  }, {
    "key" : "B",
    "text" : " Low cohesion\n"
  }, {
    "key" : "C",
    "text" : " High cohesion\n"
  }, {
    "key" : "D",
    "text" : " Loose coupling\n"
  }, {
    "key" : "E",
    "text" : " Weak encapsulation\n"
  }, {
    "key" : "F",
    "text" : " Strong encapsulation\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "A team of programmers is involved in reviewing a proposed design for a new utility\nclass. After some discussion, they realize that the current design allows other classes to\naccess methods in the utility class that should be accessible only to methods within the\nutility class itself. What design issue has the team discovered?\n"
}, {
  "number" : 225,
  "answers" : [ {
    "key" : "A",
    "text" : " class Widget { Sprocket s; } class Gadget extends Widget { Spring s; }\n"
  }, {
    "key" : "B",
    "text" : " class Widget { } class Gadget extends Widget { Spring s1; Sprocket s2; }\n"
  }, {
    "key" : "C",
    "text" : " class Widget { Sprocket s1; Spring s2; } class Gadget extends Widget { }\n"
  }, {
    "key" : "D",
    "text" : " class Gadget { Spring s; } class Widget extends Gadget{ Sprocket s; }\n"
  }, {
    "key" : "E",
    "text" : " class Gadget { } class Widget extends Gadget{ Sprocket s1; Spring s2; }\n"
  }, {
    "key" : "F",
    "text" : " class Gadget { Spring s1; Sprocket s2; } class Widget extends Gadget{ }\n"
  } ],
  "sucessAnswers" : [ "A", "C" ],
  "text" : "Given that: Gadget has-a Sprocket and Gadget has-a Spring and Gadget is-a Widget and\nWidget has-a Sprocket Which two code fragments represent these relationships? (Choose\ntwo.)\n"
}, {
  "number" : 226,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " Cannot add Toppings\n"
  }, {
    "key" : "C",
    "text" : " The code runs with no output.\n"
  }, {
    "key" : "D",
    "text" : " A NullPointerException is thrown in Line 4.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n1. class Pizza {\n2. java.util.ArrayList toppings;\n3. public final void addTopping(String topping) {\n4. toppings.add(topping);\n5. }\n6. }\n7. public class PepperoniPizza extends Pizza {\n8. public void addTopping(String topping) {\n9. System.out.println(\"Cannot add Toppings\");\n10. }\n11. public static void main(String[] args) {\n12. Pizza pizza = new PepperoniPizza();\n13. pizza.addTopping(\"Mushrooms\");\n14. }\n15. }\nWhat is the result?\n"
}, {
  "number" : 227,
  "answers" : [ {
    "key" : "A",
    "text" : " A final method in class X can be abstract if and only if X is abstract.\n"
  }, {
    "key" : "B",
    "text" : " A protected method in class X can be overridden by any subclass of X.\n"
  }, {
    "key" : "C",
    "text" : " A private static method can be called only within other static methods in class X.\n"
  }, {
    "key" : "D",
    "text" : " A non-static public final method in class X can be overridden in any subclass of X.\n"
  }, {
    "key" : "E",
    "text" : " A public static method in class X can be called by a subclass of X without explicitly\nreferencing the class X.\n"
  }, {
    "key" : "F",
    "text" : " A method with the same signature as a private final method in class X can be\nimplemented in a subclass of X.\n"
  }, {
    "key" : "G",
    "text" : " A protected method in class X can be overridden by a subclass of X only if the\nsubclass is in the same package as X.\n"
  } ],
  "sucessAnswers" : [ "B", "E", "F" ],
  "text" : "Which three statements are true? (Choose three.)\n"
}, {
  "number" : 228,
  "answers" : [ {
    "key" : "A",
    "text" : " insert a call to this() in the Car constructor\n"
  }, {
    "key" : "B",
    "text" : " insert a call to this() in the MeGo constructor\n"
  }, {
    "key" : "C",
    "text" : " insert a call to super() in the MeGo constructor\n"
  }, {
    "key" : "D",
    "text" : " insert a call to super(vin) in the MeGo constructor\n"
  }, {
    "key" : "E",
    "text" : " change the wheelCount variable in Car to protected\n"
  }, {
    "key" : "F",
    "text" : " change line 3 in the MeGo class to super.wheelCount = 3;\n"
  } ],
  "sucessAnswers" : [ "D", "E" ],
  "text" : "Click the Exhibit button.\nWhat two must the programmer do to correct the compilation errors? (Choose two.)\n"
}, {
  "number" : 229,
  "answers" : [ {
    "key" : "A",
    "text" : " The set variable contains all six elements from the coll collection, and the order is\nguaranteed to be preserved.\n"
  }, {
    "key" : "B",
    "text" : " The set variable contains only three elements from the coll collection, and the order is\nguaranteed to be preserved.\n"
  }, {
    "key" : "C",
    "text" : " The set variable contains all six elements from the coll collection, but the order is\nNOT guaranteed to be preserved.\n"
  }, {
    "key" : "D",
    "text" : " The set variable contains only three elements from the coll collection, but the order is\nNOT guaranteed to be preserved.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Click the Exhibit button.\nWhich statement is true about the set variable on line 12?\n"
}, {
  "number" : 230,
  "answers" : [ {
    "key" : "A",
    "text" : " return super.hashCode();\n"
  }, {
    "key" : "B",
    "text" : " return name.hashCode() + age * 7;\n"
  }, {
    "key" : "C",
    "text" : " return name.hashCode() + comment.hashCode() / 2;\n"
  }, {
    "key" : "D",
    "text" : " return name.hashCode() + comment.hashCode() / 2 - age * 3;\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n11. public class Person {\n12. private String name, comment;\n13. private int age;\n14. public Person(String n, int a, String c) {\n15. name = n; age = a; comment = c;\n16. }\n17. public boolean equals(Object o) {\n18. if (! (o instanceof Person)) return false;\n19, Person p = (Person)o;\n20. return age == p.age && name.equals(p.name);\n21. }\n22. }\nWhat is the appropriate definition of the hashCode method in class Person?\n"
}, {
  "number" : 231,
  "answers" : [ {
    "key" : "A",
    "text" : " public int hashCode()\n"
  }, {
    "key" : "B",
    "text" : " public boolean equals(Key k)\n"
  }, {
    "key" : "C",
    "text" : " public int compareTo(Object o)\n"
  }, {
    "key" : "D",
    "text" : " public boolean equals(Object o)\n"
  }, {
    "key" : "E",
    "text" : " public boolean compareTo(Key k)\n"
  } ],
  "sucessAnswers" : [ "A", "D" ],
  "text" : "Given:\n11. public class Key {\n12. private long id1;\n13. private long id2;\n14.\n15. // class Key methods\n16. }\nA programmer is developing a class Key, that will be used as a key in a standard\njava.util.HashMap. Which two methods should be overridden to assure that Key works\ncorrectly as a key? (Choose two.)\n"
}, {
  "number" : 232,
  "answers" : [ {
    "key" : "A",
    "text" : " public void addStrings(List list) {\n"
  }, {
    "key" : "B",
    "text" : " public void addStrings(List<String> list) {\n"
  }, {
    "key" : "C",
    "text" : " public void addStrings(List<? super String> list) {\n"
  }, {
    "key" : "D",
    "text" : " public void addStrings(List<? extends String> list) {\n"
  } ],
  "sucessAnswers" : [ "B", "C" ],
  "text" : "Given:\n3. import java.util.*;\n4. public class Hancock {\n5. // insert code here 6. list.add(\"foo\");\n7. }\n8. }\nWhich two code fragments, inserted independently at line 5, will compile without\nwarnings? (Choose two.)\n"
}, {
  "number" : 233,
  "answers" : [ {
    "key" : "B",
    "text" : " java.util.ArrayList\n"
  }, {
    "key" : "C",
    "text" : " java.util.LinearList\n"
  }, {
    "key" : "D",
    "text" : " java.util.LinkedList\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "A programmer has an algorithm that requires a java.util.List that provides an efficient\nimplementation of add(0, object), but does NOT need to support quick random access.\nWhat supports these requirements?\n A. java.util.Queue\n"
}, {
  "number" : 234,
  "answers" : [ {
    "key" : "A",
    "text" : " The class implements java.lang.Comparable.\n"
  }, {
    "key" : "B",
    "text" : " The class implements java.util.Comparator.\n"
  }, {
    "key" : "C",
    "text" : " The interface used to implement sorting allows this class to define only one sort\nsequence.\n"
  }, {
    "key" : "D",
    "text" : " The interface used to implement sorting allows this class to define many different sort\nsequences.\n"
  } ],
  "sucessAnswers" : [ "A", "C" ],
  "text" : "Given a class whose instances, when found in a collection of objects, are sorted by using\nthe compareTo() method, which two statements are true? (Choose two.)\n"
}, {
  "number" : 235,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "C",
    "text" : " [608, 610, 612, 629] [608, 610]\n"
  }, {
    "key" : "D",
    "text" : " [608, 610, 612, 629] [608, 610, 629]\n"
  }, {
    "key" : "E",
    "text" : " [606, 608, 610, 612, 629] [608, 610]\n"
  }, {
    "key" : "F",
    "text" : " [606, 608, 610, 612, 629] [608, 610, 629]\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n12. import java.util.*;\n13. public class Explorer3 {\n14. public static void main(String[] args) {\n15. TreeSet<Integer> s = new TreeSet<Integer>();\n16. TreeSet<Integer> subs = new TreeSet<Integer>();\n17. for(int i = 606; i < 613; i++)\n18. if(i%2 == 0) s.add(i);\n19. subs = (TreeSet)s.subSet(608, true, 611, true);\n20. subs.add(629);\n21. System.out.println(s + \" \" + subs);\n22. }\n23. }\nWhat is the result?\n"
}, {
  "number" : 236,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " aAaA aAa AAaa AaA\n"
  }, {
    "key" : "C",
    "text" : " AAaa AaA aAa aAaA\n"
  }, {
    "key" : "D",
    "text" : " AaA AAaa aAaA aAa\n"
  }, {
    "key" : "E",
    "text" : " aAa AaA aAaA AAaa\n"
  }, {
    "key" : "F",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given:\n1. import java.util.*;\n2.\n3. public class LetterASort{\n4. public static void main(String[] args) {\n5. ArrayList<String> strings = new ArrayList<String>();\n6. strings.add(\"aAaA\");\n7. strings.add(\"AaA\");\n8. strings.add(\"aAa\");\n9. strings.add(\"AAaa\");\n10. Collections.sort(strings);\n11. for (String s : strings) { System.out.print(s + \" \"); }\n12. }\n13. }\nWhat is the result?\n"
}, {
  "number" : 237,
  "answers" : [ {
    "key" : "A",
    "text" : " B\n"
  }, {
    "key" : "B",
    "text" : " B, followed by an Exception.\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails due to an error on line 9.\n D. Compilation fails due to an error on line 14.\n"
  }, {
    "key" : "E",
    "text" : " An Exception is thrown with no other output\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n5. class A {\n6. void foo() throws Exception { throw new Exception(); }\n7. }\n8. class SubB2 extends A {\n9. void foo() { System.out.println(\"B \"); }\n10. }\n11. class Tester {\n12. public static void main(String[] args) {\n13. A a = new SubB2();\n14. a.foo(); 15. }\n16. }\nWhat is the result?\n"
}, {
  "number" : 238,
  "answers" : [ {
    "key" : "A",
    "text" : " assert value == null;\n"
  }, {
    "key" : "B",
    "text" : " assert value != null, \"value is null\";\n"
  }, {
    "key" : "C",
    "text" : " if (value == null) { throw new AssertionException(\"value is null\"); }\n"
  }, {
    "key" : "D",
    "text" : " if (value == null) { throw new IllegalArgumentException(\"value is null\"); }\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given a method that must ensure that its parameter is not null:\n11. public void someMethod(Object value) {\n12. // check for null value\n ...\n20. System.out.println(value.getClass());\n21. }\nWhat, inserted at line 12, is the appropriate way to handle a null value?\n"
}, {
  "number" : 239,
  "answers" : [ {
    "key" : "A",
    "text" : " javac Mule.java\n"
  }, {
    "key" : "B",
    "text" : " javac -source 1.3 Mule.java\n"
  }, {
    "key" : "C",
    "text" : " javac -source 1.4 Mule.java\n"
  }, {
    "key" : "D",
    "text" : " javac -source 1.5 Mule.java\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n1. public class Mule {\n2. public static void main(String[] args) {\n3. boolean assert = true;\n4. if(assert) {\n5. System.out.println(\"assert is true\");\n6. }\n7. }\n8. }\nWhich command-line invocations will compile?\n"
}, {
  "number" : 240,
  "answers" : [ {
    "key" : "A",
    "text" : " The application will crash.\n"
  }, {
    "key" : "B",
    "text" : " The code on line 29 will be executed.\n"
  }, {
    "key" : "C",
    "text" : " The code on line 5 of class A will execute.\n"
  }, {
    "key" : "D",
    "text" : " The code on line 5 of class B will execute.\n"
  }, {
    "key" : "E",
    "text" : " The exception will be propagated back to line 27.\n"
  } ],
  "sucessAnswers" : [ "B", "E" ],
  "text" : "Click the Exhibit button.\nGiven:\n 25. try {\n26. A a = new A();\n27. a.method1();\n28. } catch (Exception e) {\n29. System.out.print(\"an error occurred\");\n30. } Which two statements are true if a NullPointerException is thrown on line 3 of class\nC? (Choose two.)\n"
}, {
  "number" : 241,
  "answers" : [ {
    "key" : "A",
    "text" : " 1\n"
  }, {
    "key" : "B",
    "text" : " 12\n"
  }, {
    "key" : "C",
    "text" : " 14\n"
  }, {
    "key" : "D",
    "text" : " 123\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "F",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "Given:\n1. public class Venus {\n2. public static void main(String[] args) {\n3. int [] x = {1,2,3};\n4. int y[] = {4,5,6};\n5. new Venus().go(x,y);\n6. }\n7. void go(int[]... z) {\n8. for(int[] a : z)\n9. System.out.print(a[0]);\n10. }\n11. } What is the result?\n"
}, {
  "number" : 242,
  "answers" : [ {
    "key" : "A",
    "text" : " harrier\n"
  }, {
    "key" : "B",
    "text" : " shepherd\n"
  }, {
    "key" : "C",
    "text" : " retriever\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "E",
    "text" : " retriever harrier\n"
  }, {
    "key" : "F",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n11. public class Test {\n12. public enum Dogs {collie, harrier, shepherd};\n13. public static void main(String [] args) {\n14. Dogs myDog = Dogs.shepherd;\n15. switch (myDog) {\n16. case collie:\n17. System.out.print(\"collie \");\n18. case default:\n19. System.out.print(\"retriever \");\n20. case harrier:\n21. System.out.print(\"harrier \");\n22. }\n23. }\n24. }\nWhat is the result?\n"
}, {
  "number" : 243,
  "answers" : [ {
    "key" : "A",
    "text" : " null\n"
  }, {
    "key" : "B",
    "text" : " finally\n"
  }, {
    "key" : "C",
    "text" : " null finally\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "E",
    "text" : " finally exception\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\n11. static void test() {\n12. try {\n13. String x = null;\n14. System.out.print(x.toString() + \" \");\n15. }\n16. finally { System.out.print(\"finally \"); }\n17. }\n18. public static void main(String[] args) {\n19. try { test(); }\n20. catch (Exception ex) { System.out.print(\"exception \"); }\n21. } What is the result?\n"
}, {
  "number" : 244,
  "answers" : [ {
    "key" : "A",
    "text" : " 2\n"
  }, {
    "key" : "B",
    "text" : " 24\n"
  }, {
    "key" : "C",
    "text" : " 234\n"
  }, {
    "key" : "D",
    "text" : " 246\n"
  }, {
    "key" : "E",
    "text" : " 2346\n"
  }, {
    "key" : "F",
    "text" : " Compilation fails.\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n1. public class Breaker2 {\n2. static String o = \"\";\n3. public static void main(String[] args) {\n4. z:\n5. for(int x = 2; x < 7; x++) {\n6. if(x==3) continue;\n7. if(x==5) break z;\n8. o = o + x;\n9. }\n10. System.out.println(o);\n11. }\n12. }\nWhat is the result?\n"
}, {
  "number" : 245,
  "answers" : [ {
    "key" : "A",
    "text" : " null\n"
  }, {
    "key" : "B",
    "text" : " zero\n"
  }, {
    "key" : "C",
    "text" : " some\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "E",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n11. public static void main(String[] args) {\n12. String str = \"null\";\n13. if (str == null) {\n14. System.out.println(\"null\");\n15. } else (str.length() == 0) {\n16. System.out.println(\"zero\");\n17. } else {\n18. System.out.println(\"some\");\n19. }\n20. }\nWhat is the result?\n"
}, {
  "number" : 246,
  "answers" : [ {
    "key" : "A",
    "text" : " ClassCastException\n"
  }, {
    "key" : "B",
    "text" : " NullPointerException\n"
  }, {
    "key" : "C",
    "text" : " NoClassDefFoundError\n"
  }, {
    "key" : "D",
    "text" : " NumberFormatException\n"
  }, {
    "key" : "E",
    "text" : " ArrayIndexOutOfBoundsException\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Which can appropriately be thrown by a programmer using Java SE technology to create\na desktop application?\n"
}, {
  "number" : 247,
  "answers" : [ {
    "key" : "A",
    "text" : " Exception\n"
  }, {
    "key" : "B",
    "text" : " A,B,Exception\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails because of an error in line 20.\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails because of an error in line 14.\n"
  }, {
    "key" : "E",
    "text" : " A NullPointerException is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n11. class A {\n12. public void process() { System.out.print(\"A,\"); }\n13. class B extends A {\n14. public void process() throws IOException {\n15. super.process();\n16. System.out.print(\"B,\");\n17. throw new IOException();\n18. }\n19. public static void main(String[] args) {\n20. try { new B().process(); }\n21. catch (IOException e) { System.out.println(\"Exception\"); }\n22. }\nWhat is the result?\n"
}, {
  "number" : 248,
  "answers" : [ {
    "key" : "A",
    "text" : " Line 16\n"
  }, {
    "key" : "B",
    "text" : " Line 17\n"
  }, {
    "key" : "C",
    "text" : " Line 18\n"
  }, {
    "key" : "D",
    "text" : " Line 19\n"
  }, {
    "key" : "E",
    "text" : " The object is NOT a candidate for garbage collection.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n11. public void genNumbers() {\n12. ArrayList numbers = new ArrayList();\n13. for (int i=0; i<10; i++) {\n14. int value = i * ((int) Math.random());\n15. Integer intObj = new Integer(value);\n16. numbers.add(intObj);\n17. }\n18. System.out.println(numbers);\n19. }\nWhich line of code marks the earliest point that an object referenced by intObj becomes a\ncandidate for garbage collection?\n"
}, {
  "number" : 249,
  "answers" : [ {
    "key" : "A",
    "text" : " Jar A\n"
  }, {
    "key" : "B",
    "text" : " Jar B\n"
  }, {
    "key" : "C",
    "text" : " Jar C\n"
  }, {
    "key" : "D",
    "text" : " Jar D\n"
  }, {
    "key" : "E",
    "text" : " Jar E\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Click the Exhibit button.\nGiven the fully-qualified class names:\ncom.foo.bar.Dog\ncom.foo.bar.blatz.Book\ncom.bar.Car\ncom.bar.blatz.Sun\nWhich graph represents the correct directory structure for a JAR file from which those\nclasses can be used by the compiler and JVM?\n"
}, {
  "number" : 250,
  "answers" : [ {
    "key" : "A",
    "text" : " Line 5\n"
  }, {
    "key" : "B",
    "text" : " Line 6\n"
  }, {
    "key" : "C",
    "text" : " Line 7\n"
  }, {
    "key" : "D",
    "text" : " Line 8\n"
  }, {
    "key" : "E",
    "text" : " Line 9\n"
  }, {
    "key" : "F",
    "text" : " Line 10\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n1. public class GC {\n2. private Object o;\n3. private void doSomethingElse(Object obj) { o = obj; }\n4. public void doSomething() {\n5. Object o = new Object();\n6. doSomethingElse(o);\n7. o = new Object();\n8. doSomethingElse(null);\n9. o = null;\n10. }\n11. }\nWhen the doSomething method is called, after which line does the Object created in line\n5 become available for garbage collection?\n"
}, {
  "number" : 251,
  "answers" : [ {
    "key" : "A",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "B",
    "text" : " An exception is thrown at runtime.\n"
  }, {
    "key" : "C",
    "text" : " doStuff x = 6 main x = 6\n"
  }, {
    "key" : "D",
    "text" : " doStuff x = 6 main x = 7\n"
  }, {
    "key" : "E",
    "text" : " doStuff x = 7 main x = 6\n"
  }, {
    "key" : "F",
    "text" : " doStuff x = 7 main x = 7\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given:\n15. public class Pass2 {\n16. public void main(String [] args) {\n17. int x = 6;\n18. Pass2 p = new Pass2();\n19. p.doStuff(x);\n20. System.out.print(\" main x = \" + x);\n21. }\n22.\n23. void doStuff(int x) {\n24. System.out.print(\" doStuff x = \" + x++);\n25. }\n26. }\nAnd the command-line invocations:\njavac Pass2.\njava java Pass2 5\nWhat is the result?\n"
}, {
  "number" : 252,
  "answers" : [ {
    "key" : "A",
    "text" : " s 14\n"
  }, {
    "key" : "B",
    "text" : " s 16\n"
  }, {
    "key" : "C",
    "text" : " s 10\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "E",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "D" ],
  "text" : "Given:\n 11. interface DeclareStuff {\n12. public static final int EASY = 3;\n13. void doStuff(int t); }\n14. public class TestDeclare implements DeclareStuff {\n15. public static void main(String [] args) {\n16. int x = 5;\n17. new TestDeclare().doStuff(++x);\n18. }\n19. void doStuff(int s) {\n20. s += EASY + ++s;\n21. System.out.println(\"s \" + s);\n22. }\n23. } What is the result?\n"
}, {
  "number" : 253,
  "answers" : [ {
    "key" : "A",
    "text" : " put Poker.jar in directory /stuff/java, and set the CLASSPATH to include /stuff/java\n"
  }, {
    "key" : "B",
    "text" : " put Poker.jar in directory /stuff/java, and set the CLASSPATH to include\n/stuff/java/*.jar\n"
  }, {
    "key" : "C",
    "text" : " Put Poker.jar in directory /stuff/java, and set the CLASSPATH to include\n/stuff/java/Poker.jar\n"
  }, {
    "key" : "D",
    "text" : " put Poker.jar in directory /stuff/java/games/cards, and set the CLASSPATH to include\n/stuff/java E. put Poker.jar in directory /stuff/java/games/cards, and set the CLASSPATH\nto include /stuff/java/*.jar\n"
  }, {
    "key" : "F",
    "text" : " put Poker.jar in directory /stuff/java/games/cards, and set the CLASSPATH to include\n/stuff/java/Poker.jar\n"
  } ],
  "sucessAnswers" : [ "C" ],
  "text" : "A class games.cards.Poker is correctly defined in the jar file Poker.jar. A user wants to\nexecute the main method of Poker on a UNIX system using the command:\njava games.cards.Poker\nWhat allows the user to do this?\n"
}, {
  "number" : 254,
  "answers" : [ {
    "key" : "A",
    "text" : " java Commander\n"
  }, {
    "key" : "B",
    "text" : " java com.sun.sjcp.Commander\n"
  }, {
    "key" : "C",
    "text" : " java com/sun/sjcp/Commander\n"
  }, {
    "key" : "D",
    "text" : " java -cp com.sun.sjcp Commander\n"
  }, {
    "key" : "E",
    "text" : " java -cp com/sun/sjcp Commander\n"
  } ],
  "sucessAnswers" : [ "B" ],
  "text" : "Given a correctly compiled class whose source code is:\n1. package com.sun.sjcp;\n2. public class Commander {\n3. public static void main(String[] args) {\n4. // more code here\n5. }\n6. }\nAssume that the class file is located in /foo/com/sun/sjcp/, the current directory is /foo/,\nand that the classpath contains \".\" (current directory). Which command line correctly runs\nCommander?\n"
}, {
  "number" : 255,
  "answers" : [ {
    "key" : "A",
    "text" : " The file will compile without error.\n"
  }, {
    "key" : "B",
    "text" : " Compilation fails. Only line 7 contains an error.\n"
  }, {
    "key" : "C",
    "text" : " Compilation fails. Only line 12 contains an error.\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails. Only line 13 contains an error.\n"
  }, {
    "key" : "E",
    "text" : " Compilation fails. Only lines 7 and 12 contain errors.\n"
  }, {
    "key" : "F",
    "text" : " Compilation fails. Only lines 7 and 13 contain errors.\n"
  }, {
    "key" : "G",
    "text" : " Compilation fails. Lines 7, 12, and 13 contain errors.\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n1. interface DoStuff2 {\n2. float getRange(int low, int high); }\n3.\n4. interface DoMore {\n5. float getAvg(int a, int b, int c); }\n6.\n7. abstract class DoAbstract implements DoStuff2, DoMore { }\n8.\n9. class DoStuff implements DoStuff2 {\n10. public float getRange(int x, int y) { return 3.14f; } }\n11.\n12. interface DoAll extends DoMore {\n13. float getAvg(int a, int b, int c, int d); }\nWhat is the result?\n"
}, {
  "number" : 256,
  "answers" : [ {
    "key" : "A",
    "text" : " 1\n"
  }, {
    "key" : "B",
    "text" : " 2\n"
  }, {
    "key" : "C",
    "text" : " 12\n"
  }, {
    "key" : "D",
    "text" : " Compilation fails.\n"
  }, {
    "key" : "E",
    "text" : " No output is produced.\n"
  }, {
    "key" : "F",
    "text" : " An exception is thrown at runtime.\n"
  } ],
  "sucessAnswers" : [ "E" ],
  "text" : "Given:\n3. public class Spock {\n4. public static void main(String[] args) {\n5. Long tail = 2000L;\n6. Long distance = 1999L;\n7. Long story = 1000L;\n8. if((tail > distance) ^ ((story * 2) == tail))\n9. System.out.print(\"1\");\n10. if((distance + 1 != tail) ^ ((story * 2) == distance))\n11. System.out.print(\"2\");\n12. }\n13. }\nWhat is the result?\n"
}, {
  "number" : 257,
  "answers" : [ {
    "key" : "A",
    "text" : " p.setWeight(420);\n"
  }, {
    "key" : "B",
    "text" : " p.changePayload(420);\n"
  }, {
    "key" : "C",
    "text" : " p = new Payload(420);\n"
  }, {
    "key" : "D",
    "text" : " Payload.setWeight(420);\n"
  }, {
    "key" : "E",
    "text" : " p = Payload.setWeight(420);\n"
  } ],
  "sucessAnswers" : [ "A" ],
  "text" : "Given:\n5.  class Payload {\n6. private int weight;\n7. public Payload (int w) { weight = w; }\n8. public void setWeight(int w) { weight = w; }\n9. public String toString() { return Integer.toString(weight); }\n10. }\n11. public class TestPayload {\n12. static void changePayload(Payload p) { /* insert code */ }\n13. public static void main(String[] args) {\n14. Payload p = new Payload(200); 15. p.setWeight(1024);\n16. changePayload(p);\n17. System.out.println(\"p is \" + p);\n18. } }\nWhich code fragment, inserted at the end of line 12, produces the output p is 420?\n"
} ]